vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
load(svDialogs::dlg_open())
load(svDialogs::dlg_open()$res)
load(svDialogs::dlg_open()$res)
readRDS(svDialogs::dlg_open()$res)
readRDS(svDialogs::dlg_open()$res)
prova <- readRDS(svDialogs::dlg_open()$res)
vent <- all_data$vent
choose_comments <- all_data$tsd_s
choose_comments <- tidyr::unite(choose_comments, col = "subj_drug_dose_unit", .data$subj, .data$drug, .data$dose, .data$unit, sep = " ")
comments_tsd <- svDialogs::dlg_list(choose_comments$subj_drug_dose_unit, multiple = TRUE, title = "Choose the comments containing subject and drug administered")$res
all_data <- prova
vent <- all_data$vent
choose_comments <- all_data$tsd_s
c
choose_comments <- tidyr::unite(choose_comments, col = "subj_drug_dose_unit", .data$subj, .data$drug, .data$dose, .data$unit, sep = " ")
comments_tsd <- svDialogs::dlg_list(choose_comments$subj_drug_dose_unit, multiple = TRUE, title = "Choose the comments containing subject and drug administered")$res
tsd_s <- choose_comments[choose_comments$subj_drug_dose_unit %in% comments_tsd, ]
tsd_s <- tidyr::separate(tsd_s, .data$subj_drug_dose_unit, c("subj", "drug", "dose", "unit"), fill = "right", extra = "merge")
tsd_s[tsd_s == "NA"] <- NA
na_pos <- dplyr::arrange(as.data.frame(which(is.na(tsd_s), arr.ind = TRUE)), row)
for (x in as.numeric(unique(na_pos$row))) {
mesg <- paste(list("subj =", "; drug =", "; dose =", "; unit ="), unlist(tsd_s[x, 2:ncol(tsd_s)]), collapse = " ")
tofill <- svDialogs::dlg_input(paste0("Enter any missing values (NA) in: ", mesg))$res
tofill <- unlist(strsplit(tofill, " "))
prova <- is.na(tsd_s[x, ])
tsd_s[x, as.vector(is.na(tsd_s[x, ]))] <- tofill
}
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
baseline <- 10
baseline <- 30
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
baseline = 30, bin = 3, form = "mean"
bin = 3
form = "mean"
dat2 <- lapply(dat, find_bins, bin = bin)
dat <- vent_jn
dat2 <- lapply(dat, find_bins, bin = bin)
devtools::load_all(".")
dat2 <- lapply(dat, find_bins, bin = bin)
# filter based on some acceptance criteria in rats
dat <- dat[
dat$TV_ml >= 0.04 &
dat$TV_ml <= 10 &
dat$f_bpm >= 10 &
dat$f_bpm <= 250 &
dat$Ti_msec >= 100 &
dat$Ti_msec <= 2000 &
dat$Te_msec >= 120 &
dat$Te_msec <= 2000,
]
dat <- dat[!is.na(dat$time_s), ]
dat
load("~/Documents/R_projects/rvent/R/sysdata.rda")
vsummary <- summarize_vent(sess1, inter = FALSE)
devtools::load_all(".")
devtools::load_all(".")
load("~/Documents/R_projects/rvent/R/sysdata.rda")
vsummary <- summarize_vent(sess1, inter = FALSE)
vsummary
load("~/Desktop/all_data (1).rds")
all_data <- readRDS(svDialogs::dlg_open()$res)
comments_tsd <- svDialogs::dlg_list(choose_comments$subj_drug_dose_unit, multiple = TRUE, title = "Choose the comments containing subject and drug administered")$res
t
vent <- all_data$vent
choose_comments <- all_data$tsd_s
choose_comments <- tidyr::unite(choose_comments, col = "subj_drug_dose_unit", .data$subj, .data$drug, .data$dose, .data$unit, sep = " ")
comments_tsd <- svDialogs::dlg_list(choose_comments$subj_drug_dose_unit, multiple = TRUE, title = "Choose the comments containing subject and drug administered")$res
tsd_s <- choose_comments[choose_comments$subj_drug_dose_unit %in% comments_tsd, ]
tsd_s[tsd_s == "NA"] <- NA
na_pos <- dplyr::arrange(as.data.frame(which(is.na(tsd_s), arr.ind = TRUE)), row)
if (nrow(na_pos) > 0) {
for (x in as.numeric(unique(na_pos$row))) {
mesg <- paste(list("subj =", "; drug =", "; dose =", "; unit ="), unlist(tsd_s[x, 2:ncol(tsd_s)]), collapse = " ")
tofill <- svDialogs::dlg_input(paste0("Enter any missing values (NA) in: ", mesg))$res
tofill <- unlist(strsplit(tofill, " "))
prova <- is.na(tsd_s[x, ])
tsd_s[x, as.vector(is.na(tsd_s[x, ]))] <- tofill
}
)
na_pos <- dplyr::arrange(as.data.frame(which(is.na(tsd_s), arr.ind = TRUE)), row)
tsd_s <- choose_comments[choose_comments$subj_drug_dose_unit %in% comments_tsd, ]
tsd_s <- tidyr::separate(tsd_s, .data$subj_drug_dose_unit, c("subj", "drug", "dose", "unit"), fill = "right", extra = "merge")
tsd_s[tsd_s == "NA"] <- NA
na_pos <- dplyr::arrange(as.data.frame(which(is.na(tsd_s), arr.ind = TRUE)), row)
if (nrow(na_pos) > 0) {
for (x in as.numeric(unique(na_pos$row))) {
mesg <- paste(list("subj =", "; drug =", "; dose =", "; unit ="), unlist(tsd_s[x, 2:ncol(tsd_s)]), collapse = " ")
tofill <- svDialogs::dlg_input(paste0("Enter any missing values (NA) in: ", mesg))$res
tofill <- unlist(strsplit(tofill, " "))
prova <- is.na(tsd_s[x, ])
tsd_s[x, as.vector(is.na(tsd_s[x, ]))] <- tofill
}
)
na_pos <- dplyr::arrange(as.data.frame(which(is.na(tsd_s), arr.ind = TRUE)), row)
for (x in as.numeric(unique(na_pos$row))) {
mesg <- paste(list("subj =", "; drug =", "; dose =", "; unit ="), unlist(tsd_s[x, 2:ncol(tsd_s)]), collapse = " ")
tofill <- svDialogs::dlg_input(paste0("Enter any missing values (NA) in: ", mesg))$res
tofill <- unlist(strsplit(tofill, " "))
prova <- is.na(tsd_s[x, ])
tsd_s[x, as.vector(is.na(tsd_s[x, ]))] <- tofill
}
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
devtools::load_all(".")
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
baseline = 30
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
saveRDS(vent_jn,"vent_jndemo.RDS")
summarize_vent(vent_jn, inter = TRUE, filter_vals = FALSE)
devtools::load_all(".")
summarize_vent(vent_jn, inter = TRUE, filter_vals = FALSE)
summarize_vent(vent_jn, inter = TRUE, filter_vals = TRUE)
summarize_vent(vent_jn, inter = TRUE, filter_vals = FALSE)
styler:::style_active_pkg()
install.packages("httr")
source('~/Documents/R_projects/rvent/R/import_session.R')
get_iox <- function(iox_data, inter = TRUE, shiny_f = FALSE) {
if (shiny_f == TRUE){
if (missing(iox_data) || is.null(iox_data) ) stop("iox files missing!")
files_imp  <- dplyr::filter(iox_data, stringr::str_detect(.data$name, pattern =  "iox.txt"))
mess <- "You have not selected any iox.txt files!"
if (length(files_imp) == 0) {
stop(mess)
}
# not sure why it appears that files have different columns.
# this is a workaround that extract name and drug form cell 16,7
subj_info <- lapply(
files_imp$datapath,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
} else {
mess <- "Choose folder containing  iox.txt files of the session."
if (inter == FALSE) {
if (missing(iox_data)) stop("iox folder missing!")
} else {
svDialogs::dlg_message(mess, type = "ok")
iox_data <- svDialogs::dlg_dir(title = mess)$res
}
list_files <- list.files(iox_data, full.names = TRUE)
files_imp <- list_files[grepl(pattern = "*iox.txt", list_files)]
mess <- "There are not iox.txt files in that folder!"
if (length(files_imp) == 0) {
if (inter == TRUE) {
stop(svDialogs::dlgMessage(mess,
type = "ok"
)$res)
} else {
stop(mess)
}
}
# not sure why it appears that files have different columns.
# this is a workaround that extract name and drug form cell 16,7
subj_info <- lapply(
files_imp,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
}
subj_info2 <- lapply(subj_info, function(x) unlist(x)[[1]][1])
subj <- stringr::str_extract(subj_info2, "[[:digit:]]+")
drug <- stringr::str_extract(subj_info2, "[[:alpha:]]{4,}")
subj_drug_v <- paste0("rat", unlist(subj), "_", unlist(drug))
vent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
names(vent) <- unlist(iox_head)
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
vent <- tidyr::separate(vent, .data$cpu_time, c("cpu_time", "cpu_ms"), sep = "\\.")
vent$cpu_time <- as.POSIXct(vent$cpu_time, format = "%I:%M:%S %p")
vent[, "timecpu_s"] <- as.numeric(vent$cpu_ms) / 1000 +
as.numeric(format(vent$cpu_time, "%S")) +
as.numeric(format(vent$cpu_time, "%M")) * 60 +
as.numeric(format(vent$cpu_time, "%H")) * 3600
# recode \
vent_id <- as.character(unique(vent$id))
id_recode <- subj_drug_v[seq_along(vent_id)]
newnames <- stats::setNames(id_recode, vent_id)
vent[, "subj_drug"] <- newnames[vent$id]
vent$subj_drug <- as.factor(newnames[vent$id])
vent$string_type <- tidyr::replace_na(vent$string_type, 0)
comments <- stats::na.omit(unique(vent$info[vent$string_type == c("comment")]))
# eliminate comments without subjects (i.e. numbers)
comments <- comments[stringr::str_detect(comments, "[1-9]")]
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd <- tidyr::unite(tsd, "info", .data$subj, .data$info, sep = " ")
# space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
# now we split the comment, tsd_s = tsd separated
tsd_s <- tidyr::separate(tsd, .data$info, c("drug", "dose", "unit"), fill = "right", extra = "merge")
rm_subj <- stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
tsd_s <- tsd_s[tsd_s$subj %in% rm_subj, ]
return(list(vent = vent, tsd_s = tsd_s))
}
devtools::load_all(".")
devtools::load_all(".")
source('~/Documents/R_projects/rvent/R/import_session.R')
devtools::load_all(".")
get_iox()
load("/Users/heverz/Documents/R_projects/rvent/R/sysdata.rda")
devtools::load_all(".")
get_iox()
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd <- tidyr::unite(tsd, "info", .data$subj, .data$info, sep = " ")
# space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
# now we split the comment, tsd_s = tsd separated
tsd_s <- tidyr::separate(tsd, .data$info, c("drug", "dose", "unit"), fill = "right", extra = "merge")
rm_subj <- stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
tsd_s <- tsd_s[tsd_s$subj %in% rm_subj, ]
tsd_s
devtools::load_all(".")
get_iox()
split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd <- tidyr::unite(tsd, "info", .data$subj, .data$info, sep = " ")
split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd1 <- tidyr::unite(tsd, "info", .data$subj, .data$info, sep = " ")
tsd1
# space between a number and a word that is not "and"
tsd2 <- split_comments(tsd1, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd2
tsd1
devtools::load_all(".")
# space between a number and a word that is not "and"
tsd2 <- split_comments(tsd1, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
devtools::load_all(".")
# space between a number and a word that is not "and"
tsd2 <- split_comments(tsd1, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
split_comments <- function(tsd, detect, sep, rem) {
browser()
tsd$info <- stringr::str_remove_all(tsd$info, " -") # there are comments with that
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] # get comments with "number number number"
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
toadd <- tidyr::separate(toadd, .data$info,
sep = sep, c("subj", "info"),
extra = "merge"
) # separate subject from rest: first space between number and word
n_subj <- unlist(stringr::str_split(unlist(toadd$subj), " ")) # create a column with subject
col_subj <- n_subj[n_subj != rem]
rep_subj <- stringr::str_count(toadd$subj, "[0-9]") # how many subjects in each comment?
toadd <- toadd[rep(seq_len(nrow(toadd)), rep_subj), ] # repeat rows for each subject
toadd$subj <- col_subj # substitute subject
tsd2 <- tidyr::separate(tsd, .data$info,
sep = "(?<=[0-9])\\s", c("subj", "info"),
extra = "merge"
)
tsd2 <- rbind(tsd2, toadd)
return(tsd2)
}
# space between a number and a word that is not "and"
tsd2 <- split_comments(tsd1, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd$info <- stringr::str_remove_all(tsd$info, " -") # there are comments with that
tsd$info
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] # get comments with "number number number"
toadd
dplyr::setdiff(tsd, toadd) # remove them
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
tsd
toadd <- tidyr::separate(toadd, .data$info,
sep = sep, c("subj", "info"),
extra = "merge"
) # separate subject from rest: first space between number and word
toadd
n_subj <- unlist(stringr::str_split(unlist(toadd$subj), " ")) # create a vector of subjects
n_subj
col_subj <- n_subj[n_subj != rem]
col_subj
rem
rep_subj <- stringr::str_count(toadd$subj, "[0-9]") # how many subjects in each comment?
rep_subj
toadd <- toadd[rep(seq_len(nrow(toadd)), rep_subj), ] # repeat rows for each subject
toadd
toadd$subj <- col_subj # substitute subject
tidyr::separate(tsd, .data$info,
sep = "(?<=[0-9])\\s", c("subj", "info"),
extra = "merge"
)
tsd3 <- tidyr::separate(tsd2, .data$info,
sep = "(?<=[0-9])\\s", c("subj", "info"),
extra = "merge"
)
tsd3
tsd4 <- rbind(tsd3, toadd)
tsd4 <
tsd4
tsd4
tsd4 <- rbind(tsd3, toadd)
devtools::load_all(".")
get_iox()
get_iox()
devtools::load_all(".")
get_iox()
all_data <- get_iox()
devtools::load_all(".")
all_data <- get_iox()
all_data <- get_iox()
saveRDS(all_data, file = "~/Destop/all_data2.rds")
saveRDS(all_data, file = "~/Desktop/all_data2.rds")
devtools::load_all(".")
import_session()
View(subj_info)
subj_info
View(tsd)
View(vent)
devtools::load_all(".")
sess1 <-  import_session()
View(sess1)
devtools::load_all(".")
sess1 <-  import_session()
vent <- all_data$vent
choose_comments <- all_data$tsd_s
choose_comments <- tidyr::unite(choose_comments, col = "subj_drug_dose_unit", .data$subj, .data$drug, .data$dose, .data$unit, sep = " ")
comments_tsd <- svDialogs::dlg_list(choose_comments$subj_drug_dose_unit, multiple = TRUE, title = "Choose the comments containing subject and drug administered")$res
tsd_s <- choose_comments[choose_comments$subj_drug_dose_unit %in% comments_tsd, ]
tsd_s <- tidyr::separate(tsd_s, .data$subj_drug_dose_unit, c("subj", "drug", "dose", "unit"), fill = "right", extra = "merge")
tsd_s$cpu_date <- as.character(tsd_s$cpu_date)
tsd_s[tsd_s == "NA"] <- NA
na_pos <- dplyr::arrange(as.data.frame(which(is.na(tsd_s), arr.ind = TRUE)), row)
tsd_s
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
devtools::load_all(".")
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
normalizetime_vent <- function(dat, tsd_s, tofill, baseline = 30) {
browser()
vent <- dat
if (!is.null(tofill)) tsd_s[is.na(tsd_s)] <- tofill
names(tsd_s)[names(tsd_s) == "timecpu_s"] <- "time_inj"
tsd_s[, "subj_drug"] <- as.factor(paste0("rat", tsd_s$subj, "_", tsd_s$drug))
vent$cpu_date <- as.character(vent$cpu_date)
# join tsd_s and vent to add column with injection time.
suppressWarnings(vent_j <- dplyr::inner_join(vent, tsd_s, by = c("subj_drug", "cpu_date")))
# split
vent_jn <- split.data.frame(vent_j, list(as.factor(vent_j$subj_drug), as.factor(vent_j$cpu_date)), drop =
TRUE)
# normalize: 0 injection
baseline <- baseline * 60 # 30 min baseline
vent_jn <- lapply(vent_jn, function(x) {
x[, "time_s"] <- x[["timecpu_s"]] - x[["time_inj"]]
x <- x[x$time_s >= -baseline, ]
class(x) <- c(unlist(class(x)), "iox")
return(x)
})
class(vent_jn) <- c(unlist(class(vent_jn)), "iox")
vent_jn
}
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
vent <- dat
if (!is.null(tofill)) tsd_s[is.na(tsd_s)] <- tofill
names(tsd_s)[names(tsd_s) == "timecpu_s"] <- "time_inj"
tsd_s[, "subj_drug"] <- as.factor(paste0("rat", tsd_s$subj, "_", tsd_s$drug))
vent$cpu_date <- as.character(vent$cpu_date)
# join tsd_s and vent to add column with injection time.
suppressWarnings(vent_j <- dplyr::inner_join(vent, tsd_s, by = c("subj_drug", "cpu_date")))
View(tsd_s)
devtools::load_all(".")
import_session()
subj_info2 <- lapply(subj_info, function(x) unlist(x)[[1]][1])
source('~/Documents/R_projects/rvent/R/import_session.R', echo=TRUE)
stringr::str_extract(subj_info2, "[[:world]]{2,}")
subj_info2
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9])[[:alpha:]]{4,}")
View(subj_info)
subj_info2
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9].)[[:alpha:]]{4,}")
stringr::str_extract(subj_info2, "(?<=[0-9]?)[[:alpha:]]{4,}")
drug <- stringr::str_extract(subj_info2, "(?<=([0-9]?))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=([0-9]?))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[[0-9]?]))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9]?))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9]))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9])[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=([0-9]?))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=([0-9]))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9])[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9]_)[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9].)[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9]?)[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9].)[[:alpha:]]{4,}")
subj_info2
x <- "female19_heroinalmitrine!0"
drug <- stringr::str_extract(subj_info2, "(?<=[0-9].)[[:alpha:]]{4,}")
drug <- stringr::str_extract(subj_info2, "[[:alpha:]]{4,}")
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19 heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
drug <-  stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19 heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19_heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9]+)[[:alpha:]]{4,}")
stringr::str_extract(x, "(?<=[0-9]*)[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9]*)[[:alpha:]]{4,}")
stringr::str_extract(x, "(?<=[0-9].+)[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].+)[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9]*)[[:alpha:]]{4,}")
stringr::str_extract(x, "(?<=[0-9](.){*})[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9](.){*})[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
stringr::str_extract(x, "^[0-9].*[[:alpha:]]{4,}")
stringr::str_extract(x, "[0-9].*[[:alpha:]]{4,}")
stringr::str_extract(x, "(?<=[0-9].*)[[:alpha:]]{4,}")
stringr::str_extract(x, "^[0-9][[:alpha:]]{4,}")
stringr::str_extract(x, "^[0-9].*[[:alpha:]]{4,}")
stringr::str_extract(x, "^.*[0-9].*[[:alpha:]]{4,}")
stringr::str_extract(x, "^.*[0-9].*([[:alpha:]]{4,})")
stringr::str_extract(x, "^.*[0-9].*?([[:alpha:]]{4,})")
gsub(x, "^.*[0-9].*?([[:alpha:]]{4,})")
x <- "female19   heroinalmitrine!0"
gsub("^.*[0-9].*?([[:alpha:]]{4,})", x)
x <- "female19   heroinalmitrine!0"
gsub("^.*[0-9].*?([[:alpha:]]{4,})", "\\1", x)
gsub("^.*[0-9].*?([[:alpha:]]){4,}", "\\1", x)
gsub("^.*[0-9].*?([[:alpha:]]){4,}", "\\1", x)
gsub("^.*[0-9].*?([[:alpha:]]{4,})", "\\1", x)
gsub("^.*[0-9].*?([[:alpha:]])", "\\1", x)
{4,}
gsub("^.*[0-9].*?([[:alpha:]]{4,})", "\\1", x)
)
)
gsub("^.*[0-9].*?([[:alpha:]]{4,})", "\\1", x)
gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", x)
x <- "rat19  heroinalmitrine!0"
# stringr::str_extract
gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", x)
x <- "rat19_heroinalmitrine!0"
# stringr::str_extract
gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", x)
# stringr::str_extract
gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
# stringr::str_extract
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
drug
devtools::load_all(".")
get_iox()
devtools::load_all(".")
source('~/Documents/R_projects/rvent/R/import_session.R')
devtools::load_all(".")
get_iox()
devtools::load_all(".")
devtools::load_all(".")
get_iox()
devtools::load_all(".")
get_iox()
get_iox()
get_iox()
devtools::load_all(".")
devtools::load_all(".")
get_iox()
get_iox()
get_iox()
devtools::load_all(".")
