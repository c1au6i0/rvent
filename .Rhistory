tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
# now we split the comment, tsd_s = tsd separated
tsd_s <- tidyr::separate(tsd, .data$info, c("drug", "dose", "unit"), fill = "right", extra = "merge")
rm_subj <- stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
tsd_s <- tsd_s[tsd_s$subj %in%  rm_subj, ]
tsd_s
devtools::load_all(".")
sess1 <- import_session()
View(sess1)
sess1 <- import_session()
sess1 <- import_session()
devtools::load_all(".")
sess1 <- import_session()
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] #get comments with "number number number"
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
toadd <- tidyr::separate(toadd, .data$info, sep = sep, c("subj", "info"),
extra = "merge") # separate subject from rest: first space between number and word
n_subj <- unlist(stringr::str_split(unlist(toadd$subj), " ")) # create a column with subject
col_subj <- n_subj[n_subj != ""]
rep_subj <- stringr::str_count(toadd$subj, "[0-9]") # how many subjects in each comment?
toadd <- toadd[rep(seq_len(nrow(toadd)), rep_subj),] # repeat rows for each subject
toadd$subj <- col_subj # substitute subject
tsd2 <- tidyr::separate(tsd, .data$info, sep = "(?<=[0-9])\\s", c("subj", "info"),
extra = "merge")
tsd2 <- rbind(tsd, toadd)
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] #get comments with "number number number"
toadd
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
toadd <- tidyr::separate(toadd, .data$info, sep = sep, c("subj", "info"),
extra = "merge") # separate subject from rest: first space between number and word
n_subj <- unlist(stringr::str_split(unlist(toadd$subj), " ")) # create a column with subject
col_subj <- n_subj[n_subj != ""]
rep_subj <- stringr::str_count(toadd$subj, "[0-9]") # how many subjects in each comment?
toadd <- toadd[rep(seq_len(nrow(toadd)), rep_subj),] # repeat rows for each subject
toadd$subj
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] #get comments with "number number number"
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
toadd <- tidyr::separate(toadd, .data$info, sep = sep, c("subj", "info"),
extra = "merge") # separate subject from rest: first space between number and word
n_subj
col_subj <- n_subj[n_subj != ""]
col_subj
rep_subj <- stringr::str_count(toadd$subj, "[0-9]") # how many subjects in each comment?
rep_subj
toadd
toadd <- toadd[rep(seq_len(nrow(toadd)), rep_subj),] # repeat rows for each subject
toadd
col_subj
toadd$subj <- col_subj # substitute subject
toadd$subj
tsd2 <- tidyr::separate(tsd, .data$info, sep = "(?<=[0-9])\\s", c("subj", "info"),
extra = "merge")
tsd2
tsd2 <- rbind(tsd, toadd)
tsd
tsd2 <- rbind(tsd2, toadd)
tsd2
devtools::load_all(".")
sess1 <- import_session()
devtools::load_all(".")
sess1 <- import_session()
devtools::load_all(".")
sess1 <- import_session()
#"number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep =  "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd <- tidyr::unite(tsd, "info", .data$subj, .data$info, sep = " " )
tsd
#space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd
#space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
source('~/Documents/R_projects/rvent/R/split_comments.R')
#space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
source('~/Documents/R_projects/rvent/R/split_comments.R')
source('~/Documents/R_projects/rvent/R/split_comments.R')
devtools::load_all(".")
#space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
#' split_comments reorganize a dataframe of time and commets in order to have a subj for each row. It is use internally
#' by \code{\link{inj_comments}}
#'
#' @param tsd dataframe of comments (2 columns).
#' @param detec regexp for detecting rows with multiple subjects
#' @param sep regexp  for separating subjects from rest
#' @rem the string to remove
#' @return a dataframe tsd_s
#' @importFrom rlang .data
#' @export
split_comments <- function(tsd, detect, sep, rem) {
browser()
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] #get comments with "number number number"
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
toadd <- tidyr::separate(toadd, .data$info, sep = sep, c("subj", "info"),
extra = "merge") # separate subject from rest: first space between number and word
n_subj <- unlist(stringr::str_split(unlist(toadd$subj), " ")) # create a column with subject
col_subj <- n_subj[n_subj != ""]
rep_subj <- stringr::str_count(toadd$subj, "[0-9]") # how many subjects in each comment?
toadd <- toadd[rep(seq_len(nrow(toadd)), rep_subj),] # repeat rows for each subject
toadd$subj <- col_subj # substitute subject
tsd2 <- tidyr::separate(tsd, .data$info, sep = "(?<=[0-9])\\s", c("subj", "info"),
extra = "merge")
tsd2 <- rbind(tsd2, toadd)
return(tsd2)
}
#space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] #get comments with "number number number"
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
toadd <- tidyr::separate(toadd, .data$info, sep = sep, c("subj", "info"),
extra = "merge") # separate subject from rest: first space between number and word
n_subj <- unlist(stringr::str_split(unlist(toadd$subj), " ")) # create a column with subject
col_subj <- n_subj[n_subj != ""]
rep_subj <- stringr::str_count(toadd$subj, "[0-9]") # how many subjects in each comment?
toadd <- toadd[rep(seq_len(nrow(toadd)), rep_subj),] # repeat rows for each subject
toadd$subj <- col_subj # substitute subject
col_subj
devtools::load_all(".")
devtools::load_all(".")
sess1 <- import_session()
styler:::style_selection()
sess1 <- import_session()
session_plots(sess1)
library(rvent)
install.packages(c("glmnet", "haven", "mgcv", "nlme", "prodlim", "Rcpp", "rvest", "survival", "testthat"))
install.packages(c("glmnet", "haven", "mgcv", "nlme", "prodlim", "Rcpp", "rvest", "survival", "testthat"))
library(vent)
library(rvent)
prova <- get_iox(svDialogs::dlg_dir(), inter = TRUE)
tryCatch(
prova <- get_iox(svDialogs::dlg_dir(), inter = TRUE),
error = function(c){
stop(c)
}
)
x <- tryCatch(
prova <- get_iox(svDialogs::dlg_dir(), inter = TRUE),
error = function(c){
stop(c)
}
)
x
x <- tryCatch(
prova <- get_iox(svDialogs::dlg_dir(), inter = TRUE),
error = function(c){
stop(c)
}
)
x <- tryCatch(
prova <- get_iox(svDialogs::dlg_dir(), inter = TRUE),
error = function(c){
c$message
}
)
x <- tryCatch(
prova <- get_iox(svDialogs::dlg_dir()$res, inter = TRUE),
error = function(c){
c$message
}
)
x <- tryCatch(
get_iox(svDialogs::dlg_dir()$res, inter = TRUE),
error = function(c){
msg <- conditionMessage(c)
}
)
x
x <- tryCatch(
get_iox(svDialogs::dlg_dir()$res, inter = FALSE),
error = function(c){
msg <- conditionMessage(c)
}
)
x <- tryCatch(
get_iox(svDialogs::dlg_dir()$res, inter = FALSE),
error = function(c){
c
}
)
x
x <- tryCatch(
get_iox(svDialogs::dlg_dir()$res, inter = FALSE),
error = function(c){
conditionMessage(c)
}
)
devtools::load_all(".")
x <- tryCatch(
get_iox(svDialogs::dlg_dir()$res, inter = FALSE),
error = function(c){
conditionMessage(c)
}
)
library(rvent)
library(rvent)
devtools::load_all(".")
get_iox()
prova <- get_iox()
is.data.frame(prova)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
sess1 <- import_session()
devtools::load_all(".")
sess1 <- import_session()
#----------------------------------------------#
all <- get_iox(iox_folder, baseline = baseline)
sess1 <- import_session()
#----------------------------------------------#
all <- get_iox(iox_folder, baseline = baseline)
#----------------------------------------------#
all <- get_iox(iox_folder = iox_folder, baseline = baseline, inter = TRUE)
#----------------------------------------------#
all <- get_iox(iox_folder = iox_folder, baseline = baseline, inter = FALSE)
if (inter = TRUE) {
all <- get_iox(baseline)
} else {
all <- get_iox(iox_folder = iox_folder, baseline = baseline, inter = FALSE)
}
if (inter = TRUE) {
all <- get_iox(baseline)
} else {
all <- get_iox(iox_folder = iox_folder, baseline = baseline, inter = FALSE)
}
vent <- all$vent
choose_comments <- all$tsd_s
choose_comments <- tidyr::unite(choose_comments, col = "subj_drug_dose_unit", .data$subj, .data$drug, .data$dose,.data$unit, sep= " " )
if (inter == FALSE) {
if (missing(comments_tsd)) stop("comments_tsd missing!")
if (length(comments_tsd) == 0) stop("no injection time!")
} else {
comments_tsd <- svDialogs::dlg_list(choose_comments$subj_drug_dose_unit, multiple = TRUE, title = "Choose the comments containing subject and drug administered")$res
}
sess1 <- import_session()
devtools::load_all(".")
devtools::load_all(".")
sess1 <- import_session()
sess2 <- import_session(iox_folder = svDialogs::dlg_dir(), inter = FALSE, comments_tsd = c("1 heroin 600 ug/kg", "9 heroin NA NA"),tofill = c(1:2) )
sess2 <- import_session(iox_folder = svDialogs::dlg_dir()$res, inter = FALSE, comments_tsd = c("1 heroin 600 ug/kg", "9 heroin NA NA"),tofill = c(1:2) )
usethis::use_tidy_ci()
usethis::use_tidy_description()
usethis::use_tidy_style()
library(rvent)
library(rvent)
usethis::use_tidy_style()
usethis::use_tidy_ci()
usethis::use_tidy_versions()
usethis::use_tidy_github()
usethis::use_tidy_versions()
usethis::use_tidy_ci()
get_iox(svDialogs::dlg_dir()$res, inter = FALSE)
library(rvent)
get_iox(svDialogs::dlg_dir()$res, inter = FALSE)
get_iox(svDialogs::dlg_dir()$res, inter = FALSE)
usethis::use_tidy_coc()
usethis::use_tidy_ci()
library(rvent)
import_session()
load("~/Documents/R_projects/rvent/R/sysdata.rda")
library(rvent)
summarize_vent(sess1)
devtools::load_all(".")
library(shiny); runApp('~/Desktop/Untitled.R')
shinyApp()
runApp('~/Desktop/Untitled.R')
devtools::load_all(".")
sess1 <- import_session()
View(sess1)
session_plots(sess1)
load("~/Documents/R_projects/rvent/R/sysdata.rda")
session_plots(sess1)
devtools::load_all(".")
devtools::load_all(".")
load("~/Documents/R_projects/rvent/R/sysdata.rda")
autoplot(dat_vent[1])
title <- paste(as.character(dat$cpu_date[1]), metric, dat$subj[1], dat$drug[1], dat$dose[1], dat$unit[1], sep = " ")
# fig <-
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
title <- paste(as.character(dat$cpu_date[1]), dat$subj[1], dat$drug[1], dat$dose[1], dat$unit[1], sep = " ")
file_name <- paste(as.character(dat$cpu_date[1]), dat$subj[1], dat$drug[1], dat$dose[1], sep = "_")
dat$int_min <- as.numeric(dat$int_min)
labs <- as.numeric(seq(min(dat$int_min), max(dat$int_min), 15))
# fig <-
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
View(dat)
devtools::load_all(".")
autoplot(dat_vent)
title <- paste(as.character(dat$cpu_date[1]), metric, dat$subj[1], dat$drug[1], dat$dose[1], dat$unit[1], sep = " ")
file_name <- paste(as.character(dat$cpu_date[1]), dat$subj[1], dat$drug[1], dat$dose[1], sep = "_")
dat$int_min <- as.numeric(dat$int_min)
labs <- as.numeric(seq(min(dat$int_min), max(dat$int_min), 15))
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
measure = "Ti_msec"
dat <- dat[dat$measure == measure,]
# fig <-
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
# fig <-
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
# facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
measure = c("Ti_msec", "TV_ml")
dat <- dat[dat$measure == measure,]
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
measure = c("Ti_msec", "TV_ml")
dat <- dat[dat$measure %in% measure,]
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
measure = c("Ti_msec", "TV_ml")
dat <- dat[dat$measure %in% measure,]
# fig <-
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
autoplot(dat_vent)
e
measure = c("Ti_msec", "TV_ml")
dat <- dat[dat$measure %in% measure,]
# fig <-
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
dat
# fig <-
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
autoplot(dat_vent)
title <- paste(as.character(dat$cpu_date[1]), dat$subj[1], dat$drug[1], dat$dose[1], dat$unit[1], sep = " ")
# file_name <- paste(as.character(dat$cpu_date[1]), dat$subj[1], dat$drug[1], dat$dose[1], sep = "_")
dat$int_min <- as.numeric(dat$int_min)
labs <- as.numeric(seq(min(dat$int_min), max(dat$int_min), 15))
dat <- dat[dat$measure %in% measure,]
# fig <-
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
measure = c("Ti_msec", "TV_ml")
dat <- dat[dat$measure %in% measure,]
# fig <-
ggplot(dat, aes_string("int_min", vent_stat, col = "measure")) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
geom_vline(xintercept = 0.5, lty = 4, lwd = 0.5) +
scale_x_continuous(labels = labs, breaks = labs) +
facet_wrap(vars(measure), ncol = 4, scales = "free_y") +
labs(title = title, y = paste(vent_stat, "+/- stdev"), x = "minutes") +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5)
)
devtools::load_all(".")
devtools::load_all(".")
session_plots()
session_plots(sess1)
devtools::load_all("~/Documents/R_projects/rvent")
session_plots(sess1)
session_plots(sess1, measure = list("Ti_msec", "TV_ml"))
devtools::load_all("~/Documents/R_projects/rvent")
session_plots(sess1, measure = list("Ti_msec", "TV_ml"))
devtools::load_all("~/Documents/R_projects/rvent")
session_plots(sess1, measure = list("Ti_msec", "TV_ml"))
devtools::load_all("~/Documents/R_projects/rvent")
session_plots(sess1, measure = list("Ti_msec", "TV_ml"))
devtools::load_all("~/Documents/R_projects/rvent")
session_plots(sess1, measure = list("Ti_msec", "TV_ml"))
devtools::load_all("~/Documents/R_projects/rvent")
session_plots(sess1, measure = list("Ti_msec", "TV_ml"))
session_plots(sess1, measure = c("Ti_msec", "TV_msec", "EV_ml", "f_bpm"  ))
session_plots(sess1, measure = list("Ti_msec", "TV_ml"))
session_plots(sess1, measure = list("Ti_msec", "TV_ml"))
session_plots(sess1, measure = c("Ti_msec", "TV_ml", "EV_ml", "f_bpm"  ))
devtools::load_all("~/Documents/R_projects/rvent")
session_plots(sess1, measure = c("Ti_msec", "TV_ml", "EV_ml", "f_bpm"  ))
devtools::load_all("~/Documents/R_projects/rvent")
session_plots(sess1, measure = c("Ti_msec", "TV_ml", "EV_ml", "f_bpm"  ))
devtools::load_all("~/Documents/R_projects/rvent")
session_plots(sess1, measure = c("Ti_msec", "TV_ml", "EV_ml", "f_bpm"  ))
devtools::load_all("~/Documents/R_projects/rvent")
session_plots()
session_plots(sess1)
measure <- c("ALL", "1")
if(length(measure) > 1 & "ALL" %in% measure) {
measure <- "ALL"
}
measure <- c("3", "1")
if(length(measure) > 1 && "ALL" %in% measure) {
measure <- "ALL"
}
devtools::load_all("~/Documents/R_projects/rvent")
devtools::load_all("~/Documents/R_projects/rvent")
import_session()
subj
x <- c(1 , 2, 1)
anyDuplicated(x)
x <- c(1 , 2, 3)
anyDuplicated(x)
anyDuplicated(subj)
