comments <- stats::na.omit(unique(vent$info[vent$string_type == c("comment")]))
# eliminate comments without subjects (i.e. numbers)
comments <- comments[stringr::str_detect(comments, "[1-9]")]
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd <- tidyr::unite(tsd, "info", .data$subj, .data$info, sep = " ")
# space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
# now we split the comment, tsd_s = tsd separated
tsd_s <- tidyr::separate(tsd, .data$info, c("drug", "dose", "unit"), fill = "right", extra = "merge")
rm_subj <- stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
tsd_s <- tsd_s[tsd_s$subj %in% rm_subj, ]
devtools::load_all(".")
ss <- get_iox()
ss
ss <- import_session()
ss
ssxxx <- summarise_vent()
ssxxx <- summarize_vent()
ssxxx <- summarize_vent(ss)
devtools::load_all("~/Documents/R_projects/rvent")
ss <- import_session()
install.packages("rlang")
install.packages("rio")
install.packages("writexl")
devtools::load_all(".")
get_iox()
devtools::load_all(".")
get_iox()
list_files <- list.files(iox_data, full.names = TRUE)
files_imp <- list_files[grepl(pattern = "*iox.txt", list_files)]
# not sure why it appears that files have different columns.
# this is a workaround that extract name and drug form cell 16,7
subj_info <- lapply(
files_imp,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
if (shiny_f == TRUE){
if (missing(iox_data) || is.null(iox_data) ) stop("iox files missing!")
files_imp  <- dplyr::filter(iox_data, stringr::str_detect(.data$name, pattern =  "iox.txt"))
mess <- "You have not selected any iox.txt files!"
if (length(files_imp) == 0) {
stop(mess)
}
# not sure why it appears that files have different columns.
# this is a workaround that extract name and drug form cell 16,7
subj_info <- lapply(
files_imp$datapath,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
} else {
mess <- "Choose folder containing iox.txt files of the session."
if (inter == FALSE) {
if (missing(iox_data)) stop("iox folder missing!")
} else {
svDialogs::dlg_message(mess, type = "ok")
iox_data <- svDialogs::dlg_dir(title = mess)$res
}
browser()
list_files <- list.files(iox_data, full.names = TRUE)
files_imp <- list_files[grepl(pattern = "*iox.txt", list_files)]
mess <- "There are not iox.txt files in that folder!"
if (length(files_imp) == 0) {
if (inter == TRUE) {
stop(svDialogs::dlgMessage(mess,
type = "ok"
)$res)
} else {
stop(mess)
}
}
# not sure why it appears that files have different columns.
# this is a workaround that extract name and drug form cell 16,7
subj_info <- lapply(
files_imp,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
}
lapply(subj_info, function(x) unlist(x)[[1]][1])
subj_info2 <- lapply(subj_info, function(x) unlist(x)[[1]][1])
subj <- stringr::str_extract(subj_info2, "[[:digit:]]+")
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
subj_drug_v <- paste0("rat", unlist(subj), "_", unlist(drug))
vent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
names(vent) <- unlist(iox_head)
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
vent <- tidyr::separate(vent, .data$cpu_time, c("cpu_time", "cpu_ms"), sep = "\\.")
vent$cpu_time <- as.POSIXct(vent$cpu_time, format = "%I:%M:%S %p")
vent[, "timecpu_s"] <- as.numeric(vent$cpu_ms) / 1000 +
as.numeric(format(vent$cpu_time, "%S")) +
as.numeric(format(vent$cpu_time, "%M")) * 60 +
as.numeric(format(vent$cpu_time, "%H")) * 3600
# recode \
vent_id <- as.character(unique(vent$id))
id_recode <- subj_drug_v[seq_along(vent_id)]
newnames <- stats::setNames(id_recode, vent_id)
vent[, "subj_drug"] <- newnames[vent$id]
vent$subj_drug <- as.factor(newnames[vent$id])
vent$string_type <- tidyr::replace_na(vent$string_type, 0)
vent$string_typ
vent$string_type
devtools::load_all(".")
get_iox()
vent$string_type
tidyr::replace_na(vent$string_type, 0)
as.numeric(vent$string_type)
# vent$string_type <-
tidyr::replace_na(as.numeric(vent$string_type), 0)
tidyr::replace_na(as.numeric(vent$string_type), 0)
unique(x)
# vent$string_type <-
x <- tidyr::replace_na(as.numeric(vent$string_type), 0)
unique(x)
vent$string_type
# vent$string_type <-
vent$string_type[is.na(vent$string_type)]
# vent$string_type <-
vent$string_type[is.na(vent$string_type)] <-  0
comments <- stats::na.omit(unique(vent$info[vent$string_type == c("comment")]))
# eliminate comments without subjects (i.e. numbers)
comments <- comments[stringr::str_detect(comments, "[1-9]")]
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd <- tidyr::unite(tsd, "info", .data$subj, .data$info, sep = " ")
# space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
# now we split the comment, tsd_s = tsd separated
tsd_s <- tidyr::separate(tsd, .data$info, c("drug", "dose", "unit"), fill = "right", extra = "merge")
rm_subj <- stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
tsd_s <- tsd_s[tsd_s$subj %in% rm_subj, ]
return(list(vent = vent, tsd_s = tsd_s))
devtools::load_all(".")
devtools::load_all(".")
get_iox()
problems()
s  <- get_iox()
problems(s)
s
problems(s)
vroom::problems(s)
devtools::load_all(".")
get_iox()
names(vent) <- unlist(iox_head)
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
vent <- tidyr::separate(vent, .data$cpu_time, c("cpu_time", "cpu_ms"), sep = "\\.")
vent$cpu_time <- as.POSIXct(vent$cpu_time, format = "%I:%M:%S %p")
vent[, "timecpu_s"] <- as.numeric(vent$cpu_ms) / 1000 +
as.numeric(format(vent$cpu_time, "%S")) +
as.numeric(format(vent$cpu_time, "%M")) * 60 +
as.numeric(format(vent$cpu_time, "%H")) * 3600
# recode \
vent_id <- as.character(unique(vent$id))
id_recode <- subj_drug_v[seq_along(vent_id)]
newnames <- stats::setNames(id_recode, vent_id)
vent[, "subj_drug"] <- newnames[vent$id]
vent$subj_drug <- as.factor(newnames[vent$id])
# vent$string_type <-
vent$string_type[is.na(vent$string_type)] <-  0
comments <- stats::na.omit(unique(vent$info[vent$string_type == c("comment")]))
# eliminate comments without subjects (i.e. numbers)
comments <- comments[stringr::str_detect(comments, "[1-9]")]
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd <- tidyr::unite(tsd, "info", .data$subj, .data$info, sep = " ")
# space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
# now we split the comment, tsd_s = tsd separated
tsd_s <- tidyr::separate(tsd, .data$info, c("drug", "dose", "unit"), fill = "right", extra = "merge")
rm_subj <- stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
tsd_s <- tsd_s[tsd_s$subj %in% rm_subj, ]
vent
vroom::problems(vent)
names(vent) <- unlist(iox_head)
vent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
vroom::problems(vent)
library(rvent)
devtools::load_all(".")
x <- get_iox()
x
x <- get_iox()
devtools::load_all(".")
x <- get_iox()
# space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
tsd$info
# space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
# space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
browser()
tsd
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
tsd$info
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd <- tidyr::unite(tsd, "info", .data$subj, .data$info, sep = " ")
# space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd
stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
tsd$info
# now we split the comment, tsd_s = tsd separated
tsd_s <- tidyr::separate(tsd, .data$info, c("drug", "dose", "unit"), fill = "right", extra = "merge")
tsd_s
rm_subj <- stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
rm_subj
tsd_s[tsd_s$subj %in% rm_subj, ]
tsd_s
vent$subj_drug
rm_subj
rm_subj <- as.numeric(stringr::str_extract(unique(vent$subj_drug), "[0-9]+"))
rm_subj
tsd_s <- tsd_s[tsd_s$subj %in% rm_subj, ]
tsd_s
devtools::load_all(".")
x <- get_iox()
devtools::load_all(".")
devtools::load_all(".")
x <- get_iox()
x
library(rvent)
library(rvent)
get_iox()
x <- get_iox()
devtools::load_all(".")
x <- get_iox()
x
x
x <- import_session()
summarize_vent(x)
devtools::load_all(".")
summarize_vent(x)
dat2 <- lapply(dat, find_bins, bin = bin, filter_vals = filter_vals)
suppressWarnings(dat_all <- do.call(rbind, dat2))
col_melt <- which(names(dat_all) %in% c("Ti_msec", "Sr_per"))
col_melt
names(dat_all)
dat2
dat2 <- lapply(dat, find_bins, bin = bin, filter_vals = filter_vals)
dat2
summarize_vent(x)
summarize_vent(x, inter = FALSE)
dat2 <- lapply(dat, find_bins, bin = bin, filter_vals = filter_vals)
dat2
x <- import_session()
x <- import_session()
x
x <- import_session()
x
x <- import_session()
devtools::load_all(".")
x <- import_session()
vent <- all_data$vent
choose_comments <- all_data$tsd_s
choose_comments
choose_comments <- tidyr::unite(choose_comments, col = "subj_drug_dose_unit", .data$subj, .data$drug, .data$dose, .data$unit, sep = " ")
comments_tsd <- svDialogs::dlg_list(choose_comments$subj_drug_dose_unit, multiple = TRUE, title = "Choose the comments containing subject and drug administered")$res
tsd_s <- choose_comments[choose_comments$subj_drug_dose_unit %in% comments_tsd, ]
tsd_s
tsd_s <- tidyr::separate(tsd_s, .data$subj_drug_dose_unit, c("subj", "drug", "dose", "unit"), fill = "right", extra = "merge")
tsd_s$cpu_date <- as.character(tsd_s$cpu_date)
tsd_s[tsd_s == "NA"] <- NA
na_pos <- dplyr::arrange(as.data.frame(which(is.na(tsd_s), arr.ind = TRUE)), row)
na_pos
na_po
na_pos
tsd_s <- choose_comments[choose_comments$subj_drug_dose_unit %in% comments_tsd, ]
tsd_s
tsd_s <- tidyr::separate(tsd_s, .data$subj_drug_dose_unit, c("subj", "drug", "dose", "unit"), fill = "right", extra = "merge")
tsd_s$cpu_date <- as.character(tsd_s$cpu_date)
tsd_s[tsd_s == "NA"] <- NA
na_pos <- dplyr::arrange(as.data.frame(which(is.na(tsd_s), arr.ind = TRUE)), row)
na_pos
tofill <- NULL
vent_jn
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
vent_jn
vent_jn
devtools::load_all(".")
x <- import_session()
vent <- dat
tsd_s <- as.data.frame(tsd_s)
vent <- tidyr::separate(vent, .data$subj_drug, c("subj", "drug"), remove = TRUE)
is.null(tofill)
tofill
names(tsd_s)[names(tsd_s) == "timecpu_s"] <- "time_inj"
tsd_s[, "subj"] <- as.factor(paste0("rat", tsd_s$subj))
vent$cpu_date <- as.character(vent$cpu_date)
vent$cpu_date
# join tsd_s and vent to add column with injection time.
suppressWarnings(vent_j <- dplyr::inner_join(vent, tsd_s, by = c("subj", "cpu_date")))
# split
vent_jn <- split.data.frame(vent_j, list(as.factor(vent_j$subj), as.factor(vent_j$cpu_date)), drop =
TRUE)
vent_jn
vent
vent$subj
tsd_s
vent
x <- import_session()
devtools::load_all(".")
devtools::load_all(".")
x <- import_session()
stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
tsd_s$subj
tsd
vent$subj_drug
tsd
id_recode
newnames <- stats::setNames(id_recode, vent_id)
newnames
vent[, "subj_drug"] <- newnames[vent$id]
vent$subj_drug <- as.factor(newnames[vent$id])
vent$subj_drug
comments <- stats::na.omit(unique(vent$info[vent$string_type == c("comment")]))
# eliminate comments without subjects (i.e. numbers)
comments <- comments[stringr::str_detect(comments, "[1-9]")]
comments
comments <- stats::na.omit(unique(vent$info[vent$string_type == c("comment")]))
comments
subj
subj
subj
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
subj_drug_v <- paste0("rat", unlist(subj), "_", unlist(drug))
subj_drug_v
subj <- as.numeric(stringr::str_extract(subj_info2, "[[:digit:]]+"))
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
subj_drug_v <- paste0("rat", unlist(subj), "_", unlist(drug))
if (shiny_f == TRUE) {
vent <- vroom::vroom(files_imp$datapath,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
} else {
vent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
}
x <- import_session()
rm_subj <- stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
rm_subj
tsd_s$subj
tsd
tsd
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
tsd
names(vent) <- unlist(iox_head)
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
x <- import_session()
names(vent) <- unlist(iox_head)
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
names(vent) <- unlist(iox_head)
vent
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
vent$cpu_date
devtools::load_all(".")
x <- get_iox()
(vent
)
vent
problems(vent)
vroom::problems(vent)
vent[1, 11]
vent[2, 11]
vent[, 11]
vent$cpu_date
vent$cpu_date
names(vent) <- unlist(iox_head)
vent$cpu_date
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
vent <- tidyr::separate(vent, .data$cpu_time, c("cpu_time", "cpu_ms"), sep = "\\.")
vent$cpu_time <- as.POSIXct(vent$cpu_time, format = "%I:%M:%S %p")
vent[, "timecpu_s"] <- as.numeric(vent$cpu_ms) / 1000 +
as.numeric(format(vent$cpu_time, "%S")) +
as.numeric(format(vent$cpu_time, "%M")) * 60 +
as.numeric(format(vent$cpu_time, "%H")) * 3600
# recode \
vent_id <- as.character(unique(vent$id))
id_recode <- subj_drug_v[seq_along(vent_id)]
newnames <- stats::setNames(id_recode, vent_id)
vent[, "subj_drug"] <- newnames[vent$id]
vent$subj_drug <- as.factor(newnames[vent$id])
vent$subj_drug
# vent$string_type <-
vent$string_type[is.na(vent$string_type)] <-  0
comments <- stats::na.omit(unique(vent$info[vent$string_type == c("comment")]))
# eliminate comments without subjects (i.e. numbers)
comments <- comments[stringr::str_detect(comments, "[1-9]")]
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd <- tidyr::unite(tsd, "info", .data$subj, .data$info, sep = " ")
# space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
# now we split the comment, tsd_s = tsd separated
tsd_s <- tidyr::separate(tsd, .data$info, c("drug", "dose", "unit"), fill = "right", extra = "merge")
rm_subj
stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
rm_subj <- stringr::str_extract(unique(vent$subj_drug), "[0-9]+")
tsd_s <- tsd_s[tsd_s$subj %in% rm_subj, ]
tsd_s
return(list(vent = vent, tsd_s = tsd_s))
x <- import_session()
devtools::load_all(".")
x <- import_session()
x
summarize_vent(x, inter = FALSE)
summarize_vent(x)
