tsd4 <- rbind(tsd3, toadd)
devtools::load_all(".")
get_iox()
get_iox()
devtools::load_all(".")
get_iox()
all_data <- get_iox()
devtools::load_all(".")
all_data <- get_iox()
all_data <- get_iox()
saveRDS(all_data, file = "~/Destop/all_data2.rds")
saveRDS(all_data, file = "~/Desktop/all_data2.rds")
devtools::load_all(".")
import_session()
View(subj_info)
subj_info
View(tsd)
View(vent)
devtools::load_all(".")
sess1 <-  import_session()
View(sess1)
devtools::load_all(".")
sess1 <-  import_session()
vent <- all_data$vent
choose_comments <- all_data$tsd_s
choose_comments <- tidyr::unite(choose_comments, col = "subj_drug_dose_unit", .data$subj, .data$drug, .data$dose, .data$unit, sep = " ")
comments_tsd <- svDialogs::dlg_list(choose_comments$subj_drug_dose_unit, multiple = TRUE, title = "Choose the comments containing subject and drug administered")$res
tsd_s <- choose_comments[choose_comments$subj_drug_dose_unit %in% comments_tsd, ]
tsd_s <- tidyr::separate(tsd_s, .data$subj_drug_dose_unit, c("subj", "drug", "dose", "unit"), fill = "right", extra = "merge")
tsd_s$cpu_date <- as.character(tsd_s$cpu_date)
tsd_s[tsd_s == "NA"] <- NA
na_pos <- dplyr::arrange(as.data.frame(which(is.na(tsd_s), arr.ind = TRUE)), row)
tsd_s
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
devtools::load_all(".")
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
normalizetime_vent <- function(dat, tsd_s, tofill, baseline = 30) {
browser()
vent <- dat
if (!is.null(tofill)) tsd_s[is.na(tsd_s)] <- tofill
names(tsd_s)[names(tsd_s) == "timecpu_s"] <- "time_inj"
tsd_s[, "subj_drug"] <- as.factor(paste0("rat", tsd_s$subj, "_", tsd_s$drug))
vent$cpu_date <- as.character(vent$cpu_date)
# join tsd_s and vent to add column with injection time.
suppressWarnings(vent_j <- dplyr::inner_join(vent, tsd_s, by = c("subj_drug", "cpu_date")))
# split
vent_jn <- split.data.frame(vent_j, list(as.factor(vent_j$subj_drug), as.factor(vent_j$cpu_date)), drop =
TRUE)
# normalize: 0 injection
baseline <- baseline * 60 # 30 min baseline
vent_jn <- lapply(vent_jn, function(x) {
x[, "time_s"] <- x[["timecpu_s"]] - x[["time_inj"]]
x <- x[x$time_s >= -baseline, ]
class(x) <- c(unlist(class(x)), "iox")
return(x)
})
class(vent_jn) <- c(unlist(class(vent_jn)), "iox")
vent_jn
}
vent_jn <- normalizetime_vent(dat = vent, tsd_s = tsd_s, tofill = tofill, baseline = baseline)
vent <- dat
if (!is.null(tofill)) tsd_s[is.na(tsd_s)] <- tofill
names(tsd_s)[names(tsd_s) == "timecpu_s"] <- "time_inj"
tsd_s[, "subj_drug"] <- as.factor(paste0("rat", tsd_s$subj, "_", tsd_s$drug))
vent$cpu_date <- as.character(vent$cpu_date)
# join tsd_s and vent to add column with injection time.
suppressWarnings(vent_j <- dplyr::inner_join(vent, tsd_s, by = c("subj_drug", "cpu_date")))
View(tsd_s)
devtools::load_all(".")
import_session()
subj_info2 <- lapply(subj_info, function(x) unlist(x)[[1]][1])
source('~/Documents/R_projects/rvent/R/import_session.R', echo=TRUE)
stringr::str_extract(subj_info2, "[[:world]]{2,}")
subj_info2
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9])[[:alpha:]]{4,}")
View(subj_info)
subj_info2
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9].)[[:alpha:]]{4,}")
stringr::str_extract(subj_info2, "(?<=[0-9]?)[[:alpha:]]{4,}")
drug <- stringr::str_extract(subj_info2, "(?<=([0-9]?))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=([0-9]?))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[[0-9]?]))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9]?))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9]))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9])[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=([0-9]?))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=([0-9]))[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9])[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9]_)[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9].)[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9]?)[[:alpha:]]{4,}")
# drug <-
stringr::str_extract(subj_info2, "(?<=[0-9].)[[:alpha:]]{4,}")
subj_info2
x <- "female19_heroinalmitrine!0"
drug <- stringr::str_extract(subj_info2, "(?<=[0-9].)[[:alpha:]]{4,}")
drug <- stringr::str_extract(subj_info2, "[[:alpha:]]{4,}")
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19 heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
drug <-  stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19 heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19_heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9]+)[[:alpha:]]{4,}")
stringr::str_extract(x, "(?<=[0-9]*)[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9]*)[[:alpha:]]{4,}")
stringr::str_extract(x, "(?<=[0-9].+)[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].+)[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9]*)[[:alpha:]]{4,}")
stringr::str_extract(x, "(?<=[0-9](.){*})[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9](.){*})[[:alpha:]]{4,}")
x <- "female19   heroinalmitrine!0"
stringr::str_extract(x, "(?<=[0-9].)[[:alpha:]]{4,}")
stringr::str_extract(x, "^[0-9].*[[:alpha:]]{4,}")
stringr::str_extract(x, "[0-9].*[[:alpha:]]{4,}")
stringr::str_extract(x, "(?<=[0-9].*)[[:alpha:]]{4,}")
stringr::str_extract(x, "^[0-9][[:alpha:]]{4,}")
stringr::str_extract(x, "^[0-9].*[[:alpha:]]{4,}")
stringr::str_extract(x, "^.*[0-9].*[[:alpha:]]{4,}")
stringr::str_extract(x, "^.*[0-9].*([[:alpha:]]{4,})")
stringr::str_extract(x, "^.*[0-9].*?([[:alpha:]]{4,})")
gsub(x, "^.*[0-9].*?([[:alpha:]]{4,})")
x <- "female19   heroinalmitrine!0"
gsub("^.*[0-9].*?([[:alpha:]]{4,})", x)
x <- "female19   heroinalmitrine!0"
gsub("^.*[0-9].*?([[:alpha:]]{4,})", "\\1", x)
gsub("^.*[0-9].*?([[:alpha:]]){4,}", "\\1", x)
gsub("^.*[0-9].*?([[:alpha:]]){4,}", "\\1", x)
gsub("^.*[0-9].*?([[:alpha:]]{4,})", "\\1", x)
gsub("^.*[0-9].*?([[:alpha:]])", "\\1", x)
{4,}
gsub("^.*[0-9].*?([[:alpha:]]{4,})", "\\1", x)
)
)
gsub("^.*[0-9].*?([[:alpha:]]{4,})", "\\1", x)
gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", x)
x <- "rat19  heroinalmitrine!0"
# stringr::str_extract
gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", x)
x <- "rat19_heroinalmitrine!0"
# stringr::str_extract
gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", x)
# stringr::str_extract
gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
# stringr::str_extract
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
drug
devtools::load_all(".")
get_iox()
devtools::load_all(".")
source('~/Documents/R_projects/rvent/R/import_session.R')
devtools::load_all(".")
get_iox()
devtools::load_all(".")
devtools::load_all(".")
get_iox()
devtools::load_all(".")
get_iox()
get_iox()
get_iox()
devtools::load_all(".")
devtools::load_all(".")
get_iox()
get_iox()
get_iox()
devtools::load_all(".")
import_session()
devtools::load_all(".")
sess1 <- import_session()
summarize(sess1)
summarize_vent(sess1)
session_plots()
session_plots(sess1)
devtools::load_all(".")
sess1 <- import_session()
sess1 <- import_session()
session_plots(sess1)
devtools::load_all(".")
get_iox()
get_iox()
get_iox()
devtools::install_local("/Users/heverz/Documents/R_projects/crispR_0.0.0.9000.tar.gz")
library(crispR)
devtools::load_all(".")
import_session()
import_session()
get_iox()
devtools::load_all(".")
get_iox()
subj_info2 <- lapply(subj_info, function(x) unlist(x)[[1]][1])
subj_info2
subj <- stringr::str_extract(subj_info2, "[[:digit:]]+")
subj
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
drug
subj_drug_v <- paste0("rat", unlist(subj), "_", unlist(drug))
subj_drug_v
if (shiny_f == TRUE) {
vent <- vroom::vroom(files_imp$datapath,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
} else {
vent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
}
vent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
names(vent) <- unlist(iox_head)
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
vent <- tidyr::separate(vent, .data$cpu_time, c("cpu_time", "cpu_ms"), sep = "\\.")
vent$cpu_time <- as.POSIXct(vent$cpu_time, format = "%I:%M:%S %p")
vent[, "timecpu_s"] <- as.numeric(vent$cpu_ms) / 1000 +
as.numeric(format(vent$cpu_time, "%S")) +
as.numeric(format(vent$cpu_time, "%M")) * 60 +
as.numeric(format(vent$cpu_time, "%H")) * 3600
# recode \
vent_id <- as.character(unique(vent$id))
id_recode <- subj_drug_v[seq_along(vent_id)]
newnames <- stats::setNames(id_recode, vent_id)
vent[, "subj_drug"] <- newnames[vent$id]
vent$subj_drug <- as.factor(newnames[vent$id])
vent$string_type <- tidyr::replace_na(vent$string_type, 0)
comments <- stats::na.omit(unique(vent$info[vent$string_type == c("comment")]))
# eliminate comments without subjects (i.e. numbers)
comments <- comments[stringr::str_detect(comments, "[1-9]")]
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
tsd$info
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
tsd$info
get_iox()
devtools::load_all(".")
get_iox()
get_iox()
devtools::load_all(".")
get_iox()
names(vent) <- unlist(iox_head)
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
vent <- tidyr::separate(vent, .data$cpu_time, c("cpu_time", "cpu_ms"), sep = "\\.")
vent$cpu_time <- as.POSIXct(vent$cpu_time, format = "%I:%M:%S %p")
vent[, "timecpu_s"] <- as.numeric(vent$cpu_ms) / 1000 +
as.numeric(format(vent$cpu_time, "%S")) +
as.numeric(format(vent$cpu_time, "%M")) * 60 +
as.numeric(format(vent$cpu_time, "%H")) * 3600
# recode \
vent_id <- as.character(unique(vent$id))
id_recode <- subj_drug_v[seq_along(vent_id)]
newnames <- stats::setNames(id_recode, vent_id)
vent[, "subj_drug"] <- newnames[vent$id]
vent$subj_drug <- as.factor(newnames[vent$id])
vent$string_type <- tidyr::replace_na(vent$string_type, 0)
comments <- stats::na.omit(unique(vent$info[vent$string_type == c("comment")]))
# eliminate comments without subjects (i.e. numbers)
comments <- comments[stringr::str_detect(comments, "[1-9]")]
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
tsd
devtools::load_all(".")
get_iox()
get_iox()
devtools::load_all(".")
load("/Users/heverz/Desktop/2020-01-31 22_11_56/status.RDA")
View(all_status)
View(all_status)
devtools::load_all(".")
prova <- import_session()
prova <- get_iox()
devtools::load_all(".")
prova <- get_iox()
devtools::load_all(".")
prova <- get_iox()
subj_info2 <- lapply(subj_info, function(x) unlist(x)[[1]][1])
subj <- stringr::str_extract(subj_info2, "[[:digit:]]+")
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
subj_drug_v <- paste0("rat", unlist(subj), "_", unlist(drug))
subj_drug_v
ent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
vent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
vent
names(vent) <- unlist(iox_head)
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
vent$cpu_date
vent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
vent
names(vent) <- unlist(iox_head)
vent$cpu_date
vent <- tidyr::separate(vent, .data$cpu_time, c("cpu_time", "cpu_ms"), sep = "\\.")
vent <- tidyr::separate(vent, .data$cpu_time, c("cpu_time", "cpu_ms"), sep = "\\.")
vent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
prova <- get_iox()
subj_info2 <- lapply(subj_info, function(x) unlist(x)[[1]][1])
subj <- stringr::str_extract(subj_info2, "[[:digit:]]+")
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
drug
b
subj_drug_v <- paste0("rat", unlist(subj), "_", unlist(drug))
vent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
names(vent) <- unlist(iox_head)
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
vent$cpu_date
vent <- tidyr::separate(vent, .data$cpu_time, c("cpu_time", "cpu_ms"), sep = "\\.")
vent$cpu_time <- as.POSIXct(vent$cpu_time, format = "%I:%M:%S %p")
vent[, "timecpu_s"] <- as.numeric(vent$cpu_ms) / 1000 +
as.numeric(format(vent$cpu_time, "%S")) +
as.numeric(format(vent$cpu_time, "%M")) * 60 +
as.numeric(format(vent$cpu_time, "%H")) * 3600
prova <- summarise_layout()
prova <- summarize_vent()
devtools::load_all(".")
prova <- import_session()
devtools::load_all(".")
prova <- import_session()
prova
prova <- import_session()
prova <- get_iox()
prova <- get_iox()
vsummary <- summarize_vent(sess1, inter = FALSE)
devtools::load_all(".")
vsummary <- summarize_vent(sess1, inter = FALSE)
vsummary
summarize_vent(sess1, inter = FALSE)
devtools::load_all(".")
vsummary <- summarize_vent(sess1, inter = FALSE)
dat2 <- lapply(dat, find_bins, bin = bin, filter_vals = filter_vals)
suppressWarnings(dat_all <- dplyr::bind_rows(dat2))
dat2
suppressWarnings(as.vector(dat_all) <- dplyr::bind_rows(dat2))
suppressWarnings(dat_all <- dplyr::bind_rows(dat2))
dat2
suppressWarnings(dat_all <- do.call(rbind, dat2))
source('~/Documents/R_projects/rvent/R/summarize_vent.R')
library(rvent)
sess1
devtools::load_all(".")
devtools::load_all(".")
sess1 <- import_session(
inter = FALSE, iox_data = "/Users/heverz/Documents/R_projects/rvent/inst/extdata/data1",
comments_tsd = c("1 heroin 600 ug/kg", "9 heroin NA NA"),
tofill = c(1:2)
)
install.packages("here")
sess1_exp <- here("tests", "testthat", 'sess1_exp")
sess1 <- import_session(
inter = FALSE, iox_data = "/Users/heverz/Documents/R_projects/rvent/inst/extdata/data1",
comments_tsd = c("1 heroin 600 ug/kg", "9 heroin NA NA"),
tofill = c(1:2)
)
test_that("import_session output", {
expect_known_output(sess1, sess1_exp, print = TRUE)
})
sess1_exp <- here("tests", "testthat", "sess1_exp")
sess1_exp
sess1_exp <- here("tests", "testthat", "sess1_exp")
``
''
'
sess1_exp <- here("tests", "testthat", "sess1_exp")
sess1 <- import_session(
inter = FALSE, iox_data = "/Users/heverz/Documents/R_projects/rvent/inst/extdata/data1",
comments_tsd = c("1 heroin 600 ug/kg", "9 heroin NA NA"),
tofill = c(1:2)
)
sess1_exp
sess1_exp <- here("tests", "testthat", "sess1_exp")
sess1_exp <- "/Users/heverz/Documents/R_projects/rvent/tests/testthat/sess1_exp"
sess1 <- import_session(
inter = FALSE, iox_data = "/Users/heverz/Documents/R_projects/rvent/inst/extdata/data1",
comments_tsd = c("1 heroin 600 ug/kg", "9 heroin NA NA"),
tofill = c(1:2)
)
