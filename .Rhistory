na_df <- tsd_s[unique(na_pos$row), c("subj", "drug", "dose", "unit")]
for (x in as.numeric(unique(na_pos$row))) {
mesg <-  paste(list("subj =","; drug =", "; dose =", "; unit ="), unlist(na_df[x,]), collapse = " ")
tofill <- svDialogs::dlg_input(paste0("Enter values separated by space. ", mesg))$res
tofill <- unlist(strsplit(tofill, " "))
prova <- is.na(tsd_s[x,])
tsd_s[x, as.vector(is.na(tsd_s[x,]))] <- tofill
}
}
na_pos
na_df <- tsd_s[unique(na_pos$row), c("subj", "drug", "dose", "unit")]
na_df
if (nrow(na_pos) > 0) {
na_df <- tsd_s[unique(na_pos$row), c("subj", "drug", "dose", "unit")]
for (x in as.numeric(unique(na_pos$row))) {
mesg <-  paste(list("subj =","; drug =", "; dose =", "; unit ="), unlist(tsd_s[x,]), collapse = " ")
tofill <- svDialogs::dlg_input(paste0("Enter values separated by space. ", mesg))$res
tofill <- unlist(strsplit(tofill, " "))
prova <- is.na(tsd_s[x,])
tsd_s[x, as.vector(is.na(tsd_s[x,]))] <- tofill
}
}
if (nrow(na_pos) > 0) {
for (x in as.numeric(unique(na_pos$row))) {
mesg <-  paste(list("subj =","; drug =", "; dose =", "; unit ="), unlist(tsd_s[x, 2:ncol(tsd_s)]), collapse = " ")
tofill <- svDialogs::dlg_input(paste0("Enter values separated by space. ", mesg))$res
tofill <- unlist(strsplit(tofill, " "))
prova <- is.na(tsd_s[x,])
tsd_s[x, as.vector(is.na(tsd_s[x,]))] <- tofill
}
}
if (nrow(na_pos) > 0) {
for (x in as.numeric(unique(na_pos$row))) {
mesg <-  paste(list("subj =","; drug =", "; dose =", "; unit ="), unlist(tsd_s[x, 2:ncol(tsd_s)]), collapse = " ")
tofill <- svDialogs::dlg_input(paste0("Enter values separated by space. ", mesg))$res
tofill <- unlist(strsplit(tofill, " "))
prova <- is.na(tsd_s[x,])
tsd_s[x, as.vector(is.na(tsd_s[x,]))] <- tofill
}
}
tsd_s
names(tsd_s)[names(tsd_s) == "time_s"] <- "time_inj"
vent <- tidyr::separate(vent, subj_drug, c("subj", "drug"))
vent_j <- dplyr::inner_join(vent, tsd_s, by = c("subj", "drug"),)
prova <- dplyr::filter(vent_j, time_s %in% time_inj)
View(prova)
View(vent)
vent <- tidyr::separate(vent, subj_drug, c("subj", "drug"))
vent
View(vent)
View(vent_j)
prova <- dplyr::filter(vent_j, time_s %in% time_inj)
View(vent_head)
View(vent_j)
View(c1)
vent_j
View(vent_j)
vent_jsp <- split.data.frame(vent_j, c("subj", "drug"))
View(vent_j)
View(vent_jsp)
vent_j[, "subj_drug"] <- paste(vent_j$subj, vent_j$drug, sep = "_")
vent_jsp <- split.data.frame(vent_j, "subj_drug")
View(vent_jsp)
vent_jsp <- split.data.frame(vent_j, subj_drug)
View(vent_jsp)
View(vent_j)
View(vent)
# tsd = time_injection subject and drug
comments_tsd <- svDialogs::dlg_list(na.omit(comments), multiple = TRUE, title = "Choose the comments containing subject and drug administered")$res
if (nrow(na_pos) > 0) {
for (x in as.numeric(unique(na_pos$row))) {
mesg <-  paste(list("subj =","; drug =", "; dose =", "; unit ="), unlist(tsd_s[x, 2:ncol(tsd_s)]), collapse = " ")
tofill <- svDialogs::dlg_input(paste0("Enter values separated by space. ", mesg))$res
tofill <- unlist(strsplit(tofill, " "))
prova <- is.na(tsd_s[x,])
tsd_s[x, as.vector(is.na(tsd_s[x,]))] <- tofill
}
}
tofill <- svDialogs::dlg_input(paste0("Enter missing values (NA) separated by space. ", mesg))$res
tsd <- vent[vent$info %in% comments_tsd, c("time_s","info")]
# if there are 2 subjects in the same comment
toadd <- tsd[stringr::str_detect(tsd$info, "and"),]
toadd$info <- stringr::str_extract(toadd$info, "(?<=and ).*")
tsd <- rbind(tsd, toadd)
# TRY ALL IN ONE
tsd$info <- stringr::str_remove_all(tsd$info, "(\\sand\\s[0-9]+\\s)")
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
# now we split them, tsd_s = tsd separated
tsd_s <- tidyr::separate(tsd, info, c("subj", "drug", "dose", "unit"), fill = "right", extra = "merge")
# Replace NA positions
na_pos <- dplyr::arrange(as.data.frame(which(is.na(tsd_s), arr.ind = TRUE)), row)
if (nrow(na_pos) > 0) {
for (x in as.numeric(unique(na_pos$row))) {
mesg <-  paste(list("subj =","; drug =", "; dose =", "; unit ="), unlist(tsd_s[x, 2:ncol(tsd_s)]), collapse = " ")
tofill <- svDialogs::dlg_input(paste0("Enter missing values (NA) separated by space of ", mesg))$res
tofill <- unlist(strsplit(tofill, " "))
prova <- is.na(tsd_s[x,])
tsd_s[x, as.vector(is.na(tsd_s[x,]))] <- tofill
}
}
# tsd = time_injection subject and drug
comments_tsd <- svDialogs::dlg_list(na.omit(comments), multiple = TRUE, title = "Choose the comments containing subject and drug administered")$res
tsd <- vent[vent$info %in% comments_tsd, c("time_s","info")]
# if there are 2 subjects in the same comment
toadd <- tsd[stringr::str_detect(tsd$info, "and"),]
toadd$info <- stringr::str_extract(toadd$info, "(?<=and ).*")
tsd <- rbind(tsd, toadd)
# TRY ALL IN ONE
tsd$info <- stringr::str_remove_all(tsd$info, "(\\sand\\s[0-9]+\\s)")
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
# now we split them, tsd_s = tsd separated
tsd_s <- tidyr::separate(tsd, info, c("subj", "drug", "dose", "unit"), fill = "right", extra = "merge")
# Replace NA positions
na_pos <- dplyr::arrange(as.data.frame(which(is.na(tsd_s), arr.ind = TRUE)), row)
if (nrow(na_pos) > 0) {
for (x in as.numeric(unique(na_pos$row))) {
mesg <-  paste(list("subj =","; drug =", "; dose =", "; unit ="), unlist(tsd_s[x, 2:ncol(tsd_s)]), collapse = " ")
tofill <- svDialogs::dlg_input(paste0("Enter missing values (NA) separated by space of ", mesg))$res
tofill <- unlist(strsplit(tofill, " "))
prova <- is.na(tsd_s[x,])
tsd_s[x, as.vector(is.na(tsd_s[x,]))] <- tofill
}
}
# vent_joined and nested
vent_jn <- split.data.frame(vent_j, subj_drug)
applyl(vent_jn, function(x){
x[,"time-s"] <- x[[time_s]] - min(x[[time_s]])
})
lapply(vent_jn, function(x){
x[,"time-s"] <- x[[time_s]] - min(x[[time_s]])
})
x[,"time-s"] <- x[["time_s"]] - min(x[["time_s"]])
vent[['time_s']]
vent[["time_s"]]
lapply(vent_jn, function(x){
x[,"time-s"] <- x[["time_s"]] - min(x[["time_s"]])
})
lapply(vent_jn, function(x){
x[,"time-s"] <- x[["time_s"]] - min(x[["time_s"]])
})
min(vent[["time_s"]])
lapply(vent_jn, function(x){
x[,"time-s"] <- x[["time_s"]] - min(x[["time_s"]], na.rm = TRUE)
})
lapply(vent_jn, function(x){
x[,"time-s"] <- x[["time_s"]] - min(x[["time_s"]], na.rm = TRUE)
x
})
# normalized
vent_jnn <- lapply(vent_jn, function(x){
x[,"time-s"] <- x[["time_s"]] - min(x[["time_s"]], na.rm = TRUE)
return(x)
})
View(vent_jnn)
# normalized
vent_jnn <- lapply(vent_jn, function(x){
x[,"time_s"] <- x[["time_s"]] - min(x[["time_s"]], na.rm = TRUE)
return(x)
})
View(vent_jnn)
# normalized
vent_jnn <- lapply(vent_jn, function(x){
x[,"time_s"] <- x[["time_s"]] - min(x[["time_s"]], na.rm = TRUE)
x[,"time_inj"] <- x[["time_inj"]] - min(x[["time_s"]], na.rm = TRUE)
return(x)
})
View(vent_jnn)
# normalized
vent_jnn <- lapply(vent_jn, function(x){
x[,"time_s"] <- x[["time_s"]] - min(x[["time_s"]], na.rm = TRUE)
x[,"time_inj"] <- x[["time_inj"]] - min(x[["time_s"]], na.rm = TRUE)
return(x)
})
View(vent_jnn)
View(vent_jn)
# normalized
vent_jnn <- lapply(vent_jn, function(x){
x[,"time_s"] <- x[["time_s"]] - min(x[["time_s"]], na.rm = TRUE)
x[,"time_inj"] <- as.numeric(x[["time_inj"]]) - min(x[["time_s"]], na.rm = TRUE)
return(x)
})
View(vent_jnn)
min(vent_jn$time_sec, na.rm = TRUE)
min(vent_jn$time_sec, na.rm = TRUE)
min(vent_jn$time_sec)
min(vent_jn$time_s, na.rm = TRUE)
vent_jn$time_s
min(vent_jn$time_s)
vent_jn$time_s
vent_j[, "subj_drug"] <- paste(vent_j$subj, vent_j$drug, sep = "_")
# vent_joined and nested
vent_jn <- split.data.frame(vent_j, subj_drug)
min(vent_jn[[1]]$time_s)
min(vent_jn[[1]]$time_s, na.rm = TRUE)
# normalized
vent_jnn <- lapply(vent_jn, function(x){
x[,"time_s"] <- x[["time_s"]] - min(x[["time_s"]], na.rm = TRUE)
x[,"time_inj"] <- as.numeric(x[["time_inj"]]) - min(x[["time_s"]], na.rm = TRUE)
return(x)
})
View(vent_jnn)
vent-jn[[1]]$time_inj - min(vent_jn[[1]]$time_s, na.rm = TRUE)
vent_jn[[1]]$time_inj - min(vent_jn[[1]]$time_s, na.rm = TRUE)
# normalized
vent_jnn <- lapply(vent_jn, function(x){
x[,"time_s"] <- x[["time_s"]] - min(x[["time_s"]], na.rm = TRUE)
x[,"time_inj"] <- x[["time_inj"]] - min(x[["time_s"]], na.rm = TRUE)
return(x)
})
View(vent_jnn)
# normalized
vent_jnn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[,"time_s"] <- x[["time_s"]] - minimum
x[,"time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
return(x)
})
vent_jnn
vent_jnn[[1]]
dplyr::glimpse(vent_jnn[[1]])
View(vent_jnn)
1840 / 60
41.3/60
41/60
# normalized
vent_jnn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[, "time_s"] <- x[["time_s"]] - minimum
x[, "time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
x[, "minimum"] <- minimum
return(x)
})
dplyr::glimpse(vent_jnn[[1]])
dplyr::glimpse(vent_jnn[[2]])
View(vent_jnn)
dplyr::glimpse(vent_jnn[[1]])
View(vent_j)
library(tidyverse)
filter(vent_j, id, subj, drug)
select(vent_j, id, subj, drug)
prova <- select(vent_j, id, subj, drug)
glimpse(prova)
View(prova)
View(vent_jn)
prova <- select(vent_j, id, subj, drug, subj_drug)
View(prova)
select(vent_j, id, subj, drug, subj_drug) %>%
distinct_at(subj_drug)
select(vent_j, id, subj, drug, subj_drug) %>%
distinct(subj_drug)
select(vent_j, id, subj, drug, subj_drug) %>%
distinct(subj_drug, .keep_all = TRUE)
select(vent_j, id, subj, drug, subj_drug) %>%
distinct(subj_drug, .keep_all = TRUE) %>%
glimpse()
# vent_joined and nested
vent_jn <- split.data.frame(vent_j, as.factor(subj_drug))
View(vent_jn)
# vent_joined and nested
vent_jn <- split(vent_j, as.factor(subj_drug))
View(vent_jsp)
View(vent_jn)
select(vent_jn, id, subj, drug, subj_drug) %>%
distinct(subj_drug, .keep_all = TRUE) %>%
glimpse()
# THIS IS NOT WORKING
vent_jn <- split(vent_j, as.factor(subj))
select(vent_jn, id, subj, drug, subj_drug) %>%
distinct(subj_drug, .keep_all = TRUE) %>%
glimpse()
View(vent_jn)
select(vent_j, id, subj, drug, subj_drug) %>%
distinct(subj_drug, .keep_all = TRUE) %>%
glimpse()
# THIS IS NOT WORKING
vent_jn <- split.data.frame(vent_j, as.factor(vent_j$subj))
View(vent_jn)
# THIS IS NOT WORKING
vent_jn <- split.data.frame(vent_j, as.factor(vent_j$subj_drug))
View(vent_jn)
# normalized
vent_jn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[, "time_s"] <- x[["time_s"]] - minimum
x[, "time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
x[, "minimum"] <- minimum
return(x)
})
View(vent_jn)
3990/60
View(vent_jn)
1840/60
remove(vent_jnn)
max(vent_jn$time_s)
max(vent_jn$time_s, na.rm = TRUE)
max(vent_jn$1_heroin$time_s, na.rm = TRUE)
max(vent_jn[["1_heroin"]]$time_s, na.rm = TRUE)
max(vent_jn[["1_heroin"]]$time_s, na.rm = TRUE)/60
max(vent_jn[["9_heroin"]]$time_s, na.rm = TRUE)/60
max(vent_jn[["9_heroin"]]$time_s, na.rm = TRUE)/60/60
max(vent_jn[["9_heroin"]]$time_s, na.rm = TRUE)/60/60
max(vent_jn[["1_heroin"]]$time_s, na.rm = TRUE)/60/60
yup <- vent_jn[["1_heroin"]]
yup
yup["time_s" >= -30 *60]
prova <- yup["time_s" >= -30 *60]
View(prova)
# normalized
vent_jn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[, "time_s"] <- x[["time_s"]] - minimum
x[, "time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
x[, "minimum"] <- minimum
x[, "time_s"] <- x[["time_s"]] - x[["time_inj"]]
return(x)
})
vent_j[, "subj_drug"] <- paste(vent_j$subj, vent_j$drug, sep = "_")
# split
vent_jn <- split.data.frame(vent_j, as.factor(vent_j$subj_drug))
# normalized
vent_jn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[, "time_s"] <- x[["time_s"]] - minimum
x[, "time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
x[, "minimum"] <- minimum
x[, "time_s"] <- x[["time_s"]] - x[["time_inj"]]
return(x)
})
yup <- vent_jn[["1_heroin"]]
yup["time_s" > 10, ]
prova <-   yup["time_s" > 10, ]
View(prova)
prova <-   yup[yup$time_s > 10, ]
View(prova)
# split
vent_jn <- split.data.frame(vent_j, as.factor(vent_j$subj_drug))
# normalized
baseline <- 30 * 60
vent_jn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[, "time_s"] <- x[["time_s"]] - minimum
x[, "time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
x[, "minimum"] <- minimum
x[, "time_s"] <- x[["time_s"]] - x[["time_inj"]]
x <-   x[x$time_s > 10, ]
return(x)
})
View(vent_jn)
# split
vent_jn <- split.data.frame(vent_j, as.factor(vent_j$subj_drug))
# normalized
baseline <- 30 * 60
vent_jn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[, "time_s"] <- x[["time_s"]] - minimum
x[, "time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
x[, "minimum"] <- minimum
x[, "time_s"] <- x[["time_s"]] - x[["time_inj"]]
x <-   x[x$time_s > baseline, ]
return(x)
})
vent_jn[1]
yup <- vent_jn[1]
library(tidyverse)
yup %>%  filter(time_s = 0) %>%
select(info, time_s, time_inj)
yup %>%  tibble() %>%
filter(time_s = 0) %>%
select(info, time_s, time_inj)
yup %>%  as.data.frame() %>%
filter(time_s = 0) %>%
select(info, time_s, time_inj)
yup %>%  as.data.frame() %>%
filter(time_s == 0) %>%
select(info, time_s, time_inj)
View(yup)
yup <- vent_jn[[1]]
yup %>%  as.data.frame() %>%
filter(time_s == 0) %>%
select(info, time_s, time_inj)
View(yup)
# normalize: 0 injection
baseline <- 30 * 60 # 30 min baseline
# split
vent_jn <- split.data.frame(vent_j, as.factor(vent_j$subj_drug))
# normalize: 0 injection
baseline <- 30 * 60 # 30 min baseline
vent_jn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[, "time_s"] <- x[["time_s"]] - minimum
x[, "time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
x[, "minimum"] <- minimum
x[, "time_s"] <- x[["time_s"]] - x[["time_inj"]]
x <-   x[x$time_s > baseline, ]
return(x)
})
yup <- vent_jn[[1]]
View(yup)
# split
vent_jn <- split.data.frame(vent_j, as.factor(vent_j$subj_drug))
# normalize: 0 injection
baseline <- 30 * 60 # 30 min baseline
vent_jn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[, "time_s"] <- x[["time_s"]] - minimum
x[, "time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
x[, "minimum"] <- minimum
x[, "time_s"] <- x[["time_s"]] - x[["time_inj"]]
x <-   x[x$time_s >= -baseline, ]
return(x)
})
yup <- vent_jn[[1]]
yup %>%  as.data.frame() %>%
filter(time_s == 0) %>%
select(info, time_s, time_inj)
cut(yup$time_s, 0, c("baseline", "drug"))
cut(yup$time_s, c(min(yup$time_s), 0, max(yup$time_s)), c("baseline", "drug"))
cut(yup$time_s, c(min(yup$time_s), 0), c("baseline", "drug"), right = FALSE)
cut(yup$time_s, c(min(yup$time_s), 0), c("baseline", "drug", "ciao"), right = FALSE)
cut(yup$time_s, c(min(yup$time_s), 0), right = FALSE)
cut(yup$time_s,  0, right = FALSE)
cut(yup$time_s,  c(0, 10), right = FALSE)
findInterval(yup$time_s,  c(yup$time_s, 0, yup$time_s), left.open = TRUE)
findInterval(yup$time_s,  c(min(yup$time_s), 0, max(yup$time_s)), left.open = TRUE)
min(yup$time_s)
# split
vent_jn <- split.data.frame(vent_j, as.factor(vent_j$subj_drug))
# normalize: 0 injection
baseline <- 30 * 60 # 30 min baseline
vent_jn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[, "time_s"] <- x[["time_s"]] - minimum
x[, "time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
x[, "minimum"] <- minimum
x[, "time_s"] <- x[["time_s"]] - x[["time_inj"]]
x <-   x[x$time_s >= -baseline, ]
return(x)
})
yup <- vent_jn[[1]]
View(yup)
0 >= 0
findInterval(yup$time_s,  c(min(yup$time_s,na.rm = TRUE), 0, max(yup$time_s,na.rm = TRUE)), left.open = TRUE)
prova <-  findInterval(yup$time_s,  c(min(yup$time_s,na.rm = TRUE), 0, max(yup$time_s,na.rm = TRUE)), left.open = TRUE)
unique(prova)
is.na(yup$time_s)
sum(is.na(yup$time_s))
yup %>% filter(is.na(time_s))
unique(prova)
prova <-  findInterval(yup$time_s,  c(min(yup$time_s,na.rm = TRUE), 0, max(yup$time_s,na.rm = TRUE)))
unique(prova)
prova <-  findInterval(yup$time_s,  c(min(yup$time_s,na.rm = TRUE), 0))
unique(prova)
prova
yup[, "drug"]<-  findInterval(yup$time_s,  c(min(yup$time_s,na.rm = TRUE), 0), left.open = FALSE)
View(yup)
yup <- vent_jn[[1]]
yup[, "drug_int"]<-  findInterval(yup$time_s,  c(min(yup$time_s,na.rm = TRUE), 0), left.open = FALSE)
View(yup)
yup %>% filter(time_s == 0)
yup %>% filter(time_s == 0) %>%  select(time_s, drug_int)
yup %>% filter(time_s <= 0) %>%  select(time_s, drug_int)
yup %>% filter(time_s === 0) %>%  select(time_s, drug_int)
yup %>% filter(time_s == 0) %>%  select(time_s, drug_int)
yup %>% filter(time_s >= 0) %>%  select(time_s, drug_int)
yup %>% filter(time_s <= 0) %>%  select(time_s, drug_int) %>%
arrange(desc(time_s))
View(na_df)
yup
usethis::use_data(yup, "1_heroin", internal = TRUE)
usethis::use_data(yup, 1_heroin, internal = TRUE)
usethis::use_data(yup, internal = TRUE)
usethis::use_data(yup, name = "1_heroin" internal = TRUE)
usethis::use_data(yup, name = "1_heroin", internal = TRUE)
usethis::use_data(yup, name = "1_heroin", internal = FALSE)
usethis::use_data(yup, internal = FALSE)
class(vent_jn)
class(vent_jn[[1]])
# split
vent_jn <- split.data.frame(vent_j, as.factor(vent_j$subj_drug))
# normalize: 0 injection
baseline <- 30 * 60 # 30 min baseline
vent_jn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[, "time_s"] <- x[["time_s"]] - minimum
x[, "time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
x[, "minimum"] <- minimum
x[, "time_s"] <- x[["time_s"]] - x[["time_inj"]]
x <-   x[x$time_s >= -baseline, ]
class(x) <- "vent"
return(x)
})
class(vent_jn)
class(vent_jn) <- "vent"
class(vent_jn)
# split
vent_jn <- split.data.frame(vent_j, as.factor(vent_j$subj_drug))
# normalize: 0 injection
baseline <- 30 * 60 # 30 min baseline
vent_jn <- lapply(vent_jn, function(x){
minimum <- min(x[["time_s"]], na.rm = TRUE)
x[, "time_s"] <- x[["time_s"]] - minimum
x[, "time_inj"] <- as.numeric(x[["time_inj"]]) - minimum
x[, "minimum"] <- minimum
x[, "time_s"] <- x[["time_s"]] - x[["time_inj"]]
x <-   x[x$time_s >= -baseline, ]
class(x) <- "vent"
return(x)
})
class(vent_jn)
class(vent_jn) <- c("list", "vent")
