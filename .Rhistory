renv::install("curl")
renv::install("foreign")
renv::install("haven")
renv::install("R.util")
renv::install("R.utils")
renv::install("rio")
renv::init()
renv::statu()
renv::status()
renv::snapshot()
devtools::load_all(".")
renv::install("devtools")
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
subj_info <- lapply(
files_imp,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
View(subj_info)
subj_info2 <- lapply(subj_info, function(x) unlist(x)[[1]][1])
subj_info2
subj <- as.numeric(stringr::str_extract(subj_info2, "[[:digit:]]+"))
subj
subj_info2
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
drug
subj_drug_v <- paste0("rat", unlist(subj), "_", unlist(drug))
subj_drug_v
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
subj_info <- lapply(
files_imp,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
subj_info
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
subj_info <- lapply(
files_imp,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
subj_info
subj_info2 <- lapply(subj_info, function(x) unlist(x)[[1]][1])
subj_info2
subj <- as.numeric(stringr::str_extract(subj_info2, "[[:digit:]]+"))
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{4,}).*", "\\1", subj_info2)
subj_drug_v <- paste0("rat", unlist(subj), "_", unlist(drug))
drug
subj_info2
subj
subj_info2
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{3,}).*", "\\1", subj_info2)
drug
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
subj_info <- lapply(
files_imp,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
if (shiny_f == TRUE){
if (missing(iox_data) || is.null(iox_data) ) stop("iox files missing!")
files_imp  <- dplyr::filter(iox_data, stringr::str_detect(.data$name, pattern =  "iox.txt"))
mess <- "You have not selected any iox.txt files!"
if (length(files_imp) == 0) {
stop(mess)
}
# not sure why it appears that files have different columns.
# this is a workaround that extract name and drug form cell 16,7
subj_info <- lapply(
files_imp$datapath,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
} else {
mess <- "Choose folder containing iox.txt files of the session."
if (inter == FALSE) {
if (missing(iox_data)) stop("iox folder missing!")
} else {
svDialogs::dlg_message(mess, type = "ok")
iox_data <- svDialogs::dlg_dir(title = mess)$res
}
list_files <- list.files(iox_data, full.names = TRUE)
files_imp <- list_files[grepl(pattern = "*iox.txt", list_files)]
mess <- "There are not iox.txt files in that folder!"
if (length(files_imp) == 0) {
if (inter == TRUE) {
stop(svDialogs::dlgMessage(mess,
type = "ok"
)$res)
} else {
stop(mess)
}
}
# not sure why it appears that files have different columns.
# this is a workaround that extract name and drug form cell 16,7
browser()
subj_info <- lapply(
files_imp,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
}
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
devtools::load_all(".")
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
# not sure why it appears that files have different columns.
# this is a workaround that extract name and drug form cell 16,7
subj_info <- lapply(
files_imp,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
if (shiny_f == TRUE){
if (missing(iox_data) || is.null(iox_data) ) stop("iox files missing!")
files_imp  <- dplyr::filter(iox_data, stringr::str_detect(.data$name, pattern =  "iox.txt"))
mess <- "You have not selected any iox.txt files!"
if (length(files_imp) == 0) {
stop(mess)
}
# not sure why it appears that files have different columns.
# this is a workaround that extract name and drug form cell 16,7
subj_info <- lapply(
files_imp$datapath,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
} else {
mess <- "Choose folder containing iox.txt files of the session."
if (inter == FALSE) {
if (missing(iox_data)) stop("iox folder missing!")
} else {
svDialogs::dlg_message(mess, type = "ok")
iox_data <- svDialogs::dlg_dir(title = mess)$res
}
list_files <- list.files(iox_data, full.names = TRUE)
files_imp <- list_files[grepl(pattern = "*iox.txt", list_files)]
mess <- "There are not iox.txt files in that folder!"
if (length(files_imp) == 0) {
if (inter == TRUE) {
stop(svDialogs::dlgMessage(mess,
type = "ok"
)$res)
} else {
stop(mess)
}
}
browser()
# not sure why it appears that files have different columns.
# this is a workaround that extract name and drug form cell 16,7
subj_info <- lapply(
files_imp,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
}
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
# not sure why it appears that files have different columns.
# this is a workaround that extract name and drug form cell 16,7
subj_info <- lapply(
files_imp,
vroom::vroom,
skip = 15,
n_max = 1,
delim = "\t",
col_names = FALSE,
col_select = "X7",
col_types = c(X7 = "c")
)
subj_info
subj_info2 <- lapply(subj_info, function(x) unlist(x)[[1]][1])
subj_info2
subj
subj <- as.numeric(stringr::str_extract(subj_info2, "[[:digit:]]+"))
subj
drug  <- gsub("^.*[0-9].*?([[:alpha:]]{3,}).*", "\\1", subj_info2)
drug
subj_drug_v <- paste0("rat", unlist(subj), "_", unlist(drug))
subj_drug_v
vent <- vroom::vroom(files_imp,
delim = "\t",
skip = 41,
col_names = FALSE,
col_types = list(
X6 = "c",
X7 = "c",
X8 = "c",
X9 = "c"
),
id = "id"
)
vent
names(vent) <- unlist(iox_head)
vent
names(vent)
# time in seconds from cpu_time, unfortunately the other columns reset to 0 after 1h
# Aug 19, 2019, 19-Mar-19
vent$cpu_date <- lubridate::parse_date_time(vent$cpu_date,
orders = c("%b %d, %Y", "%d-%b-%y")
)
vent <- tidyr::separate(vent, .data$cpu_time, c("cpu_time", "cpu_ms"), sep = "\\.")
vent$cpu_time <- as.POSIXct(vent$cpu_time, format = "%I:%M:%S %p")
vent[, "timecpu_s"] <- as.numeric(vent$cpu_ms) / 1000 +
as.numeric(format(vent$cpu_time, "%S")) +
as.numeric(format(vent$cpu_time, "%M")) * 60 +
as.numeric(format(vent$cpu_time, "%H")) * 3600
# recode \
vent_id <- as.character(unique(vent$id))
vent_id
id_recode <- subj_drug_v[seq_along(vent_id)]
id_recode
newnames <- stats::setNames(id_recode, vent_id)
newnames
vent[, "subj_drug"] <- newnames[vent$id]
View(vent)
vent$subj_drug <- as.factor(newnames[vent$id])
as.factor(newnames[vent$id])
vent$subj_drug
# vent$string_type <-
vent$string_type[is.na(vent$string_type)] <-  0
comments <- stats::na.omit(unique(vent$info[vent$string_type == c("comment")]))
# eliminate comments without subjects (i.e. numbers)
comments <- comments[stringr::str_detect(comments, "[1-9]")]
comments
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
tsd$info
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
tsd$info
vent$info
unique(vent$info)
comments
vent$info %in% comments
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
tsd
tsd$info <- stringr::str_remove_all(tsd$info, " -") # there are comments with that
tsd
tsd$info <- stringr::str_remove_all(tsd$info, " -") # there are comments with that
tsd$info
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] # get comments with "number number number"
toadd
tsd$info <- stringr::str_remove_all(tsd$info, " -") # there are comments with that
tsd$info
toadd
tsd
View(tsd)
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] # get comments with "number number number"
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
tsd2
toadd <- tidyr::separate(toadd, .data$info,
sep = sep, c("subj", "info"),
extra = "merge"
) # separate subject from rest: first space between number and word
toadd
n_subj <- unlist(stringr::str_split(unlist(toadd$subj), " ")) # create a vector of subjects
n_subj
j <- unlist(stringr::str_split(unlist(toadd$subj), " ")) # create a vector of subjects
c
rlang::last_trace()
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
tsd$info <- stringr::str_remove_all(tsd$info, " -") # there are comments with that
View(tsd)
tsd
View(tsd)
get_iox("./inst/extdata/data1/", inter = FALSE)
force(tsd)
View(tsd)
tsd$info <- stringr::str_remove_all(tsd$info, " -") # there are comments with that
tsd
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] # get comments with "number number number"
toadd
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
tsd2
toadd
toadd <- tidyr::separate(toadd, .data$info,
sep = sep, c("subj", "info"),
extra = "merge"
) # separate subject from rest: first space between number and word
toadd
n_subj <- unlist(stringr::str_split(unlist(toadd$subj), " ")) # create a vector of subjects
n_subj
col_subj
col_subj <- n_subj[n_subj != rem] # remove and
col_subj
rep_subj <- stringr::str_count(toadd$subj, "[0-9]") # how many subjects in each comment?
rep_subj
toadd <- toadd[rep(seq_len(nrow(toadd)), rep_subj), ] # repeat rows for each subject
toadd
toadd$subj <- col_subj # substitute subject
toadd
tsd3 <- tidyr::separate(tsd2, .data$info,
sep = "(?<=[0-9])\\s", c("subj", "info"),
extra = "merge"
)
tsd3
tsd3
tsd3
tsd3
tsd3
tsd4 <- rbind(tsd3, toadd)
tsd4
devtools::load_all(".")
get_iox("./inst/extdata/data1/", inter = FALSE)
get_iox("./inst/extdata/data1/", inter = FALSE)
tsd
devtools::load_all(".")
devtools::load_all(".")
tsd$subj <- as.numeric(tsd$subj)
devtools::load_all(".")
get_iox("./inst/extdata/data1/", inter = FALSE)
View(tsd)
tsd$subj <- as.numeric(tsd$subj)
tsd <- tidyr::unite(tsd, "info", .data$subj, .data$info, sep = " ")
tsd
# space between a number and a word that is not "and"
tsd <- split_comments(tsd, detect = "and", sep = "(?<=[0-9])\\s(?=[A-z])(?!and)", rem = "and")
tsd
tsd$info <- stringr::str_remove_all(tsd$info, "(?!/)[:punct:]")
tsd
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
tsd$info
toadd
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] # get comments with "number number number"
toadd
tsd2
tsd
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
tsd2
toadd <- tidyr::separate(toadd, .data$info,
sep = sep, c("subj", "info"),
extra = "merge"
) # separate subject from rest: first space between number and word
toadd
n_subj <- unlist(stringr::str_split(unlist(toadd$subj), " ")) # create a vector of subjects
n_subj
col_subj
col_subj <- n_subj[n_subj != rem] # remove and
col_subj
rep_subj <- stringr::str_count(toadd$subj, "[0-9]") # how many subjects in each comment?
rep_subj
rep_subj
rep_subj
col_subj
to_add$subj
toadd$subj
rep_subj <- stringr::str_count(toadd$subj, "\\d+") # how many subjects in each comment?
rep_subj
toadd <- toadd[rep(seq_len(nrow(toadd)), rep_subj), ] # repeat rows for each subject
toadd$subj <- col_subj # substitute subject
toadd$subj
tsd3 <- tidyr::separate(tsd2, .data$info,
sep = "(?<=[0-9])\\s", c("subj", "info"),
extra = "merge"
)
tsd3
tsd4 <- rbind(tsd3, toadd)
tsd4
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
devtools::load_all(".")
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
tsd$subj <- as.numeric(tsd$subj)
View(tsd)
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd
subj <- as.numeric(stringr::str_extract(subj_info2, "[[:digit:]]+"))
subj
tsd
tsd
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
View(tsd)
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
devtools::load_all(".")
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] # get comments with "number number number"
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
View(toadd)
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
tsd
# tsd = time_injection subject and drug
tsd <- vent[vent$info %in% comments, c("cpu_date", "timecpu_s", "info")]
tsd
tsd$info <- stringr::str_remove_all(tsd$info, "^([:alpha:]{3,4}\\s)|^[:alpha:]{3,4}") # rat rats or ray
# "number number number"
tsd <- split_comments(tsd, detect = "[0-9]\\s[0-9]+", sep = "(?<=[0-9])\\s(?=[A-z])", rem = "")
tsd
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
tsd$info <- stringr::str_remove_all(tsd$info, " -") # there are comments with that
toadd <- tsd[stringr::str_detect(tsd$info, detect), ] # get comments with "number number number"
tsd2 <- dplyr::setdiff(tsd, toadd) # remove them
toadd <- tidyr::separate(toadd, .data$info,
sep = sep, c("subj", "info"),
extra = "merge"
) # separate subject from rest: first space between number and word
toadd
n_subj <- unlist(stringr::str_split(unlist(toadd$subj), " ")) # create a vector of subjects
n_subj
col_subj <- n_subj[n_subj != rem] # remove
rep_subj <- stringr::str_count(toadd$subj, "\\d+") # how many subjects in each comment?
rep_subj
toadd <- toadd[rep(seq_len(nrow(toadd)), rep_subj), ] # repeat rows for each subject
toadd
toadd$subj <- col_subj # substitute subject
toadd
View(tsd2)
str_replace("07nlx", "\\d+[[:alpha:]]","\\d+\\s[[:alpha:]]" )
stringt::str_replace("07nlx", "\\d+[[:alpha:]]","\\d+\\s[[:alpha:]]" )
stringr::str_replace("07nlx", "\\d+[[:alpha:]]","\\d+\\s[[:alpha:]]" )
gsub("([0-9])([[:alpha:]])", "\\1 \\2", tsd$info)
# add a space if subject and treatment do not have it (e.s. 07nlx)
tsd$info <- gsub("([0-9])([[:alpha:]])", "\\1 \\2", tsd$info)
tsd3 <- tidyr::separate(tsd2, .data$info,
sep = "(?<=[0-9])\\s", c("subj", "info"),
extra = "merge"
)
tsd4 <- rbind(tsd3, toadd)
tsd4
# add a space if subject and treatment do not have it (e.s. 07nlx)
tsd$info <- gsub("([0-9])([[:alpha:]])", "\\1 \\2", tsd$info)
tsd$info
# add a space if subject and treatment do not have it (e.s. 07nlx)
tsd2$info <- gsub("([0-9])([[:alpha:]])", "\\1 \\2", tsd2$info)
tsd3 <- tidyr::separate(tsd2, .data$info,
sep = "(?<=[0-9])\\s", c("subj", "info"),
extra = "merge"
)
tsd3
tsd4 <- rbind(tsd3, toadd)
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
devtools::load_all(".")
devtools::load_all(".")
get_iox("/Users/heverz/Desktop/prova/", inter = FALSE)
renv::status()
renv::snapshot()
library(rvent)
43 * 60
42 * 60
